location
  -analysisTarget:physicalLocation         # This is the heart of the change: replace the physicalLocation-valued propertoes analysisTarget and
  -resultFile:physicalLocation             #  resultFile with a single physicalLocation property.
  +physicalLocation                        # The physicalLocation where the result was detected, equivalent to the removed resultFile property.
  +message                                 # With its new message and annotations properties, a location now replaces the annotatedCodeLocation object.
                                           # Places that used to use annotatedCodeLocation can now use a vanilla location. That is,
                                           #  it's not only a more logically cohesive type, but as a result, it's more generally useful.
  +annotations:annotation[]                # Transplanted from annotatedCodeLocation.
  =fullyQualifiedLogicalName
  =logicalLocationKey

result
  =locations:location[]
  +analysisTarget:fileLocation             # A single analysis target, at the "result" level, applying to all the location objects in the location array.
  ~relatedLocations:location[]             # Formerly an array of annotatedCodeLocation, but now that location has a message property, location suffices. 
  =codeFlows:codeFlow[]

codeFlow
  =threadFlows:threadFlow[]                # This assumes we accept the change for #80, "Code flow enhancements."

threadFlow
  ~locations:codeFlowLocation[]            # Used to be annotatedCodeLocation[]. But many of the properties in aCL were *specific to* code flows, so
                                           #  we renamed the type.

physicalLocation
  fileLocation
  region
  +contextRegion:region                    # This addresses Jim's Issue #99.

region
  =startLine, ...                          # The existing region properties.
  +snippet:fileContent                     # region gains a snippet property, per #99

~codeFlowLocation                          # Approximately the same as the existing annotatedCodeLocation, but does *not* include a couple of
                                           #  properties that were used only on stack frames, not in code flows.

  -physicalLocation                        # Now that the location object no longer carries around the baggage of two logical-location-valued
  -fullyQualifiedLogcalName                #  properties, we can replace these five properties with a location (note that location now has a
  -logicalLocationKey                      #  message property and an annotations property; all locations can be annotated).
  -message
  -annotations:annotation[]
  +location


  =step                                    # So a codeFlowLocation is a location plus a few code-flow-specific properties.
  =importance
  =nestingLevel                            # Assuming we approve #80
  =executionOrder                          # Assuming we approve #80
  ...

stackFrame                                 # We can make a similar change on the stackFrame object, replacing these four properties
                                           #  with a location object. (stackFrame didn't used to have an annotations property. Now
                                           #  it gets one from location.)
  -physicalLocation
  -fullyQualifiedLogcalName
  -logicalLocationKey
  -message
  +location

  =address                                 # And again, now a stackFrame is a location plus a few stack-frame-specific properties.
  ...
