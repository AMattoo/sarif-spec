<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.0.1" sequence="0" timestamp="1513616753000" analysisTimestamp="1513617102110" release="">
  <Project projectName="twitter4j-3.0.3">
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/target/test-classes/twitter4j/TwitterTestBase$TestUserInfo.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/target/test-classes/twitter4j/TwitterTestBase.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/target/test-classes/twitter4j/AsyncTwitterTest.class</Jar>
    <AuxClasspathEntry>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/target/test-classes</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/target/classes</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/twitter4j-core-3.0.3.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/junit/junit/3.8.2/junit-3.8.2.jar</AuxClasspathEntry>
    <SrcDir>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-async/src/test/java</SrcDir>
    <Plugin id="com.h3xstream.findsecbugs" enabled="true"/>
    <Plugin id="com.mebigfatguy.fbcontrib" enabled="true"/>
  </Project>
  <BugInstance type="IMC_IMMATURE_CLASS_PRINTSTACKTRACE" priority="2" rank="17" abbrev="IMC" category="STYLE" instanceHash="4e3ef21fdd3f305401fe137bfa5f00f6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method prints the stack trace to the console</ShortMessage>
    <LongMessage>Method twitter4j.AsyncTwitterTest.onException(TwitterException, TwitterMethod) prints the stack trace to the console</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="onException" signature="(Ltwitter4j/TwitterException;Ltwitter4j/TwitterMethod;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="977" end="981" startBytecode="0" endBytecode="119" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.onException(TwitterException, TwitterMethod)</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="979" end="979" startBytecode="34" endBytecode="34" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 979]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IMC_IMMATURE_CLASS_PRINTSTACKTRACE" priority="2" rank="17" abbrev="IMC" category="STYLE" instanceHash="d15605ee62b31b94d76b1c9833d7733a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method prints the stack trace to the console</ShortMessage>
    <LongMessage>Method twitter4j.AsyncTwitterTest.waitForResponse() prints the stack trace to the console</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="waitForResponse" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="997" end="1001" startBytecode="0" endBytecode="91" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.waitForResponse()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="999" end="999" startBytecode="12" endBytecode="12" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 999]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NN_NAKED_NOTIFY" priority="2" rank="14" abbrev="NN" category="MT_CORRECTNESS" instanceHash="8c9ad0728a2b3f8d8ca72adb4e358e9b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Naked notify</ShortMessage>
    <LongMessage>Naked notify in twitter4j.AsyncTwitterTest.notifyResponse()</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="notifyResponse" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="992" end="993" startBytecode="0" endBytecode="50" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.notifyResponse()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="992" end="992" startBytecode="1" endBytecode="1" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 992]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBJECT_DESERIALIZATION" priority="1" rank="10" abbrev="SECOBDES" category="SECURITY" instanceHash="3a6dd4c360ed9bc6cfbc81249eadf65" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="502">
    <ShortMessage>Object deserialization is used in {1}</ShortMessage>
    <LongMessage>Object deserialization is used in twitter4j.AsyncTwitterTest.assertDeserializedFormIsEqual(Object)</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="assertDeserializedFormIsEqual" signature="(Ljava/lang/Object;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="1010" end="1020" startBytecode="0" endBytecode="204" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.assertDeserializedFormIsEqual(Object)</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="1016" end="1016" startBytecode="50" endBytecode="50" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 1016]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="61c7b965484270a6aa21d6834a79df31" instanceOccurrenceNum="0" instanceOccurrenceMax="1" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>File(...) reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="getRandomlyChosenFile" signature="()Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="1032" end="1037" startBytecode="0" endBytecode="129" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.getRandomlyChosenFile()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="1033" end="1033" startBytecode="18" endBytecode="18" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 1033]</Message>
    </SourceLine>
    <String value="File(...)" role="Sink method">
      <Message>Sink method File(...)</Message>
    </String>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="61c7b965484270a6aa21d6834a79df31" instanceOccurrenceNum="1" instanceOccurrenceMax="1" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>File(...) reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="getRandomlyChosenFile" signature="()Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="1032" end="1037" startBytecode="0" endBytecode="129" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.getRandomlyChosenFile()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="1035" end="1035" startBytecode="56" endBytecode="56" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 1035]</Message>
    </SourceLine>
    <String value="File(...)" role="Sink method">
      <Message>Sink method File(...)</Message>
    </String>
    <SourceLine classname="twitter4j.AsyncTwitterTest" start="1035" end="1035" startBytecode="50" endBytecode="50" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 1035]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="33a0dff52c9cd1ffb6f6d1fc54f4cd08" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.AsyncTwitterTest.testAccountProfileImageUpdates() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="testAccountProfileImageUpdates" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="117" end="126" startBytecode="0" endBytecode="140" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.testAccountProfileImageUpdates()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="122" end="122" startBytecode="32" endBytecode="32" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 122]</Message>
    </SourceLine>
    <String value="getRandomlyChosenFile()Ljava/io/File;">
      <Message>Value getRandomlyChosenFile()Ljava/io/File;</Message>
    </String>
  </BugInstance>
  <BugInstance type="SPP_TOSTRING_ON_STRING" priority="2" rank="7" abbrev="SPP" category="CORRECTNESS" instanceHash="5eac2bfa889ae32b1e44970f2f350215" instanceOccurrenceNum="0" instanceOccurrenceMax="1">
    <ShortMessage>Method calls toString() on a String</ShortMessage>
    <LongMessage>Method twitter4j.AsyncTwitterTest.testAccountMethods() calls toString() on a String</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="testAccountMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="191" end="266" startBytecode="0" endBytecode="1262" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.testAccountMethods()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="201" end="201" startBytecode="87" endBytecode="87" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 201]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SPP_TOSTRING_ON_STRING" priority="2" rank="7" abbrev="SPP" category="CORRECTNESS" instanceHash="5eac2bfa889ae32b1e44970f2f350215" instanceOccurrenceNum="1" instanceOccurrenceMax="1">
    <ShortMessage>Method calls toString() on a String</ShortMessage>
    <LongMessage>Method twitter4j.AsyncTwitterTest.testAccountMethods() calls toString() on a String</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Method classname="twitter4j.AsyncTwitterTest" name="testAccountMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="191" end="266" startBytecode="0" endBytecode="1262" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java"/>
      <Message>In method twitter4j.AsyncTwitterTest.testAccountMethods()</Message>
    </Method>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="216" end="216" startBytecode="261" endBytecode="261" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 216]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="b38587239e5a958232770f9921359d2e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.apiConf</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="apiConf" signature="Ltwitter4j/TwitterAPIConfiguration;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.apiConf</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="961" end="961" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 961]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="966d314374c54e573c5357108fb61e05" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.categories</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="categories" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.categories</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="484" end="484" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 484]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="f276d504c4def444eb384127335f84aa" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.friendships</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="friendships" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.friendships</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="748" end="748" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 748]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="9156e27f4f3a76b75b271dbcd910a6fe" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.languages</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="languages" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.languages</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="967" end="967" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 967]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="7c710db96d340b03c5f40f0daea5affb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.locations</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="locations" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.locations</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="882" end="882" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 882]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="73e7931e4eea2179ac5a821cec2f41f4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.oembed</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="oembed" signature="Ltwitter4j/OEmbed;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.oembed</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="447" end="447" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 447]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="14ae5c71e4686be5895f83f30fc90c84" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.pagableUserLists</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="pagableUserLists" signature="Ltwitter4j/PagableResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.pagableUserLists</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="566" end="566" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 566]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="fd8822c1fd19ec9dd5e647d15c2eac0d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.place</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="place" signature="Ltwitter4j/Place;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.place</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="913" end="913" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 913]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="51071548cbbf33183bc45c7b2c016f72" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.places</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="places" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.places</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="895" end="895" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 895]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="ce70442958308cbfb1f3a94a9e83515a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.queryResult</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="queryResult" signature="Ltwitter4j/QueryResult;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.queryResult</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="388" end="388" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 388]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="a377afac89412bbdaeefad72af1c6c44" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.relatedResults</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="relatedResults" signature="Ltwitter4j/RelatedResults;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.relatedResults</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="954" end="954" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 954]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="211f45a7b6d5978751ba8977001edc4a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.relationship</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="relationship" signature="Ltwitter4j/Relationship;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.relationship</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="699" end="699" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 699]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="8e4abc5933ca5850f44cf55c3257a966" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.savedSearch</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="savedSearch" signature="Ltwitter4j/SavedSearch;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.savedSearch</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="592" end="592" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 592]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="993308f664eaf1097a9c55a87209c1d4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.savedSearches</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="savedSearches" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.savedSearches</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="586" end="586" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 586]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="ed72c2ef57caf459eb9bc574c3445750" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.settings</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="settings" signature="Ltwitter4j/AccountSettings;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.settings</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="781" end="781" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 781]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="1bf23db562b2c4e73e427ec383011fb3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.trends</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="trends" signature="Ltwitter4j/Trends;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.trends</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="925" end="925" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 925]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="d545544c653c75487893c965f8d1a9b7" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.userList</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="userList" signature="Ltwitter4j/UserList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.userList</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="530" end="530" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 530]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_FIELD" priority="2" rank="18" abbrev="UrF" category="PERFORMANCE" instanceHash="5d8469e4ed27d9351a622496d7ee99eb" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread field</ShortMessage>
    <LongMessage>Unread field: twitter4j.AsyncTwitterTest.userLists</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="userLists" signature="Ltwitter4j/ResponseList;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.userLists</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" primary="true" start="542" end="542" startBytecode="2" endBytecode="2" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
      <Message>At AsyncTwitterTest.java:[line 542]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="2e25e82cf1bdf7b654deedb49c4a12f3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: twitter4j.AsyncTwitterTest.blockExists</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="blockExists" signature="Z" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.blockExists</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="318f4b5799b90555ec53b5587fc6bd88" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: twitter4j.AsyncTwitterTest.exists</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="exists" signature="Z" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.exists</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="6150c52a239ac6e978c5bbaf4b8c30ad" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: twitter4j.AsyncTwitterTest.test</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="test" signature="Z" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.test</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="4867eb570d44fe7efca443712ca15663" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: twitter4j.AsyncTwitterTest.totals</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="totals" signature="Ltwitter4j/AccountTotals;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.totals</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UUF_UNUSED_FIELD" priority="2" rank="18" abbrev="UuF" category="PERFORMANCE" instanceHash="50883c5414768f772c6a925066b1eeb8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unused field</ShortMessage>
    <LongMessage>Unused field: twitter4j.AsyncTwitterTest.trendsList</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="trendsList" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.trendsList</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="WOC_WRITE_ONLY_COLLECTION_FIELD" priority="2" rank="7" abbrev="WOC" category="CORRECTNESS" instanceHash="372eb3f314fec7c3f29605e7bb3ad38c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Class creates and initializes a collection but never reads or gains information from it</ShortMessage>
    <LongMessage>Class twitter4j.AsyncTwitterTest creates and initializes a collection but never reads or gains information from it</LongMessage>
    <Class classname="twitter4j.AsyncTwitterTest" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" start="33" end="1037" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>At AsyncTwitterTest.java:[lines 33-1037]</Message>
      </SourceLine>
      <Message>In class twitter4j.AsyncTwitterTest</Message>
    </Class>
    <Field classname="twitter4j.AsyncTwitterTest" name="trendsList" signature="Ljava/util/List;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java">
        <Message>In AsyncTwitterTest.java</Message>
      </SourceLine>
      <Message>Field twitter4j.AsyncTwitterTest.trendsList</Message>
    </Field>
    <SourceLine classname="twitter4j.AsyncTwitterTest" sourcefile="AsyncTwitterTest.java" sourcepath="twitter4j/AsyncTwitterTest.java" relSourcepath="twitter4j/AsyncTwitterTest.java" synthetic="true">
      <Message>In AsyncTwitterTest.java</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_FOR_PARSING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="be0d68343aea81a2502c29a29723c059" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxing/unboxing to parse a primitive</ShortMessage>
    <LongMessage>Boxing/unboxing to parse a primitive twitter4j.TwitterTestBase.setUp()</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="28" end="103" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 28-103]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="62" end="99" startBytecode="0" endBytecode="540" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="intValue" signature="()I" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="701" end="701" startBytecode="0" endBytecode="46" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.intValue()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="parseInt" signature="(Ljava/lang/String;)I" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Integer.parseInt(String) instead</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="86" end="86" startBytecode="271" endBytecode="271" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 86]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NAB_NEEDLESS_BOXING_PARSE" priority="2" rank="18" abbrev="NAB" category="PERFORMANCE" instanceHash="51ccc9ff349116dc0f46988447f1c638" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method converts String to primitive using excessive boxing</ShortMessage>
    <LongMessage>Method twitter4j.TwitterTestBase.setUp() converts String to primitive using excessive boxing</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="28" end="103" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 28-103]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="62" end="99" startBytecode="0" endBytecode="540" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="86" end="86" startBytecode="271" endBytecode="271" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 86]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="a540a3168a28b6f9647d9bd28ea3917c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource on checked exception</ShortMessage>
    <LongMessage>twitter4j.TwitterTestBase.setUp() may fail to clean up java.io.InputStream on checked exception</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="28" end="103" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 28-103]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="62" end="99" startBytecode="0" endBytecode="540" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="45" end="363" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-363]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="63" end="63" startBytecode="9" endBytecode="9" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at TwitterTestBase.java:[line 63] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.TwitterTestBase" start="64" end="64" startBytecode="13" endBytecode="13" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at TwitterTestBase.java:[line 64]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_FOR_PARSING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="afb960983942c7e9f7e7019975f21479" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxing/unboxing to parse a primitive</ShortMessage>
    <LongMessage>Boxing/unboxing to parse a primitive new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 47-53]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase$TestUserInfo" name="&lt;init&gt;" signature="(Ltwitter4j/TwitterTestBase;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" startBytecode="0" endBytecode="241" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="longValue" signature="()J" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Long" start="734" end="734" startBytecode="0" endBytecode="46" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method Long.longValue()</Message>
    </Method>
    <Method classname="java.lang.Long" name="parseLong" signature="(Ljava/lang/String;)J" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Long.parseLong(String) instead</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="50" end="50" startBytecode="99" endBytecode="99" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NAB_NEEDLESS_BOXING_PARSE" priority="2" rank="18" abbrev="NAB" category="PERFORMANCE" instanceHash="7518cb1eb003e6469e9a61b54ef46c71" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method converts String to primitive using excessive boxing</ShortMessage>
    <LongMessage>Method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String) converts String to primitive using excessive boxing</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 47-53]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase$TestUserInfo" name="&lt;init&gt;" signature="(Ltwitter4j/TwitterTestBase;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" startBytecode="0" endBytecode="241" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="50" end="50" startBytecode="99" endBytecode="99" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="c827daba610f3af4fc49406b4ebdcc92" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: twitter4j.TwitterTestBase$TestUserInfo.accessToken</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 47-53]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Field classname="twitter4j.TwitterTestBase$TestUserInfo" name="accessToken" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>In TwitterTestBase.java</Message>
      </SourceLine>
      <Message>Field twitter4j.TwitterTestBase$TestUserInfo.accessToken</Message>
    </Field>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="51" end="51" startBytecode="132" endBytecode="132" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 51]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="615ddbd269fd8de6d7fcd464965f11bd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: twitter4j.TwitterTestBase$TestUserInfo.accessTokenSecret</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 47-53]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Field classname="twitter4j.TwitterTestBase$TestUserInfo" name="accessTokenSecret" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>In TwitterTestBase.java</Message>
      </SourceLine>
      <Message>Field twitter4j.TwitterTestBase$TestUserInfo.accessTokenSecret</Message>
    </Field>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="52" end="52" startBytecode="162" endBytecode="162" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="6ae8441f6789a008d4b335ca9d5a490e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: twitter4j.TwitterTestBase$TestUserInfo.password</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="47" end="53" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 47-53]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Field classname="twitter4j.TwitterTestBase$TestUserInfo" name="password" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>In TwitterTestBase.java</Message>
      </SourceLine>
      <Message>Field twitter4j.TwitterTestBase$TestUserInfo.password</Message>
    </Field>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="49" end="49" startBytecode="66" endBytecode="66" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="CORRECTNESS">
    <Description>Correctness</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="SECURITY">
    <Description>Security</Description>
  </BugCategory>
  <BugCategory category="MT_CORRECTNESS">
    <Description>Multithreaded correctness</Description>
  </BugCategory>
  <BugCategory category="EXPERIMENTAL">
    <Description>Experimental</Description>
  </BugCategory>
  <BugPattern type="SPP_TOSTRING_ON_STRING" abbrev="SPP" category="CORRECTNESS">
    <ShortDescription>Method calls toString() on a String</ShortDescription>
    <Details><![CDATA[
	       
	       <p>This method calls toString on a String. Just use the object itself if you want a String.</p>
	       
	   ]]></Details>
  </BugPattern>
  <BugPattern type="PATH_TRAVERSAL_IN" abbrev="SECPTI" category="SECURITY" cweid="22">
    <ShortDescription>Potential Path Traversal (file read)</ShortDescription>
    <Details><![CDATA[
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter. 
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="http://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="http://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="OBJECT_DESERIALIZATION" abbrev="SECOBDES" category="SECURITY" cweid="502">
    <ShortDescription>Object deserialization is used in {1}</ShortDescription>
    <Details><![CDATA[
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable has soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="http://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class java.util.HashSet</a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource on checked exception</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          To send feedback, either:
          </p>
          <ul>
            <li>send email to findbugs@cs.umd.edu</li>
            <li>file a bug report: <a href="http://findbugs.sourceforge.net/reportingBugs.html">http://findbugs.sourceforge.net/reportingBugs.html</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>, for
          a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="WOC_WRITE_ONLY_COLLECTION_FIELD" abbrev="WOC" category="CORRECTNESS">
    <ShortDescription>Class creates and initializes a collection but never reads or gains information from it</ShortDescription>
    <Details><![CDATA[
			
			<p>This class creates and initializes a collection as a field but then never access this collection
			to gain information, or fetch items from the collection. It is likely that this collection
			is left over from a past effort, and can be removed.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" abbrev="UrF" category="STYLE">
    <ShortDescription>Unread public/protected field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp;
The field is public or protected, so perhaps
    it is intended to be used with classes not seen as part of the analysis. If not,
consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NAB_NEEDLESS_BOXING_PARSE" abbrev="NAB" category="PERFORMANCE">
    <ShortDescription>Method converts String to primitive using excessive boxing</ShortDescription>
    <Details><![CDATA[
			
			<p>This method passes a String to a wrapped primitive object's valueOf method, which in turn calls
			the boxedValue() method to convert to a primitive. When it is desired to convert from a String
			to a primitive value, it is simpler to use the BoxedPrimitive.parseBoxedPrimitive(String)
			method. </p>
			
			<p>Instead of something like:<br/>
<pre><code>
public int someMethod(String data) {
long l = Long.valueOf(data).longValue();
float f = Float.valueOf(data).floatValue();
return Integer.valueOf(data); // There is an implicit .intValue() call
}
</code></pre>
			Simply do: <br/>
<pre><code>
public int someMethod(String data) {
	long l = Long.parseLong(data);
	float f = Float.parseFloat(data);
	return Integer.parseInt(data);
}
</code></pre>
			</p>
			
			
		]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_FIELD" abbrev="UrF" category="PERFORMANCE">
    <ShortDescription>Unread field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp; Consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NN_NAKED_NOTIFY" abbrev="NN" category="MT_CORRECTNESS">
    <ShortDescription>Naked notify</ShortDescription>
    <Details><![CDATA[

  <p> A call to <code>notify()</code> or <code>notifyAll()</code>
  was made without any (apparent) accompanying
  modification to mutable object state.&nbsp; In general, calling a notify
  method on a monitor is done because some condition another thread is
  waiting for has become true.&nbsp; However, for the condition to be meaningful,
  it must involve a heap object that is visible to both threads.</p>

  <p> This bug does not necessarily indicate an error, since the change to
  mutable object state may have taken place in a method which then called
  the method containing the notification.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_BOXED_PRIMITIVE_FOR_PARSING" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Boxing/unboxing to parse a primitive</ShortDescription>
    <Details><![CDATA[

  <p>A boxed primitive is created from a String, just to extract the unboxed primitive value.
  It is more efficient to just call the static parseXXX method.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="UUF_UNUSED_FIELD" abbrev="UuF" category="PERFORMANCE">
    <ShortDescription>Unused field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never used.&nbsp; Consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" abbrev="PRMC" category="PERFORMANCE">
    <ShortDescription>Method appears to call the same method on the same object redundantly</ShortDescription>
    <Details><![CDATA[
			
			<p>This method makes two consecutive calls to the same method using the same constant
			parameters, on the same instance without any intervening changes to the objects. If this
			method does not make changes to the object, which it appears it doesn't, then making
			two calls is just a waste. These method calls could be combined by assigning the
			result into a temporary variable, and using the variable the second time.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="IMC_IMMATURE_CLASS_PRINTSTACKTRACE" abbrev="IMC" category="STYLE">
    <ShortDescription>Method prints the stack trace to the console</ShortDescription>
    <Details><![CDATA[
    		
    		<p>This method prints a stack trace to the console. This is non configurable, and causes an 
    		application to look unprofessional. Switch to using loggers so that users can control what 
    		is logged and where.</p>
    		
    	]]></Details>
  </BugPattern>
  <BugCode abbrev="UuF">
    <Description>Unused field</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="IMC">
    <Description>Immature Class</Description>
  </BugCode>
  <BugCode abbrev="UrF">
    <Description>Unread field</Description>
  </BugCode>
  <BugCode abbrev="PRMC">
    <Description>Possibly Redundant Method Calls</Description>
  </BugCode>
  <BugCode abbrev="SECPTI">
    <Description>Potential Path Traversal (file read)</Description>
  </BugCode>
  <BugCode abbrev="OBL">
    <Description>Unsatisfied obligation to clean up stream or resource</Description>
  </BugCode>
  <BugCode abbrev="WOC">
    <Description>Write Only Collection</Description>
  </BugCode>
  <BugCode abbrev="NAB">
    <Description>Needless Autoboxing</Description>
  </BugCode>
  <BugCode abbrev="SPP">
    <Description>Sillyness Pot Pourri</Description>
  </BugCode>
  <BugCode abbrev="SECOBDES">
    <Description>Object deserialization is used</Description>
  </BugCode>
  <BugCode abbrev="NN">
    <Description>Naked notify</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Mon, 18 Dec 2017 11:05:53 -0600" total_classes="3" referenced_classes="78" total_bugs="41" total_size="747" num_packages="1" java_version="1.7.0_95" vm_version="24.95-b01" cpu_seconds="49.94" clock_seconds="25.37" peak_mbytes="253.07" alloc_mbytes="3564.50" gc_seconds="0.60" priority_2="38" priority_1="3">
    <FileStats path="twitter4j/AsyncTwitterTest.java" bugCount="33" size="671" bugHash="1b13d0cd82b4352e7eca4becd0ef5f99"/>
    <FileStats path="twitter4j/TwitterTestBase.java" bugCount="8" size="76" bugHash="093ca1e3c2c3c07e8a56a608081081da"/>
    <PackageStats package="twitter4j" total_bugs="41" total_types="3" total_size="747" priority_2="38" priority_1="3">
      <ClassStats class="twitter4j.AsyncTwitterTest" sourceFile="AsyncTwitterTest.java" interface="false" size="671" bugs="33" priority_2="32" priority_1="1"/>
      <ClassStats class="twitter4j.TwitterTestBase" sourceFile="TwitterTestBase.java" interface="false" size="61" bugs="3" priority_2="2" priority_1="1"/>
      <ClassStats class="twitter4j.TwitterTestBase$TestUserInfo" sourceFile="TwitterTestBase.java" interface="false" size="15" bugs="5" priority_2="4" priority_1="1"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="2134" invocations="540" avgMicrosecondsPerInvocation="3952" maxMicrosecondsPerInvocation="75916" standardDeviationMircosecondsPerInvocation="7976"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="1331" invocations="78" avgMicrosecondsPerInvocation="17076" maxMicrosecondsPerInvocation="264942" standardDeviationMircosecondsPerInvocation="37335"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.collect.CollectStatistics" totalMilliseconds="1198" invocations="78" avgMicrosecondsPerInvocation="15367" maxMicrosecondsPerInvocation="197287" standardDeviationMircosecondsPerInvocation="32620"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="1132" invocations="78" avgMicrosecondsPerInvocation="14513" maxMicrosecondsPerInvocation="238615" standardDeviationMircosecondsPerInvocation="32395"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="836" invocations="116" avgMicrosecondsPerInvocation="7208" maxMicrosecondsPerInvocation="201555" standardDeviationMircosecondsPerInvocation="23615"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="687" invocations="224" avgMicrosecondsPerInvocation="3068" maxMicrosecondsPerInvocation="64772" standardDeviationMircosecondsPerInvocation="8080"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="611" invocations="116" avgMicrosecondsPerInvocation="5275" maxMicrosecondsPerInvocation="213737" standardDeviationMircosecondsPerInvocation="21132"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="563" invocations="118" avgMicrosecondsPerInvocation="4773" maxMicrosecondsPerInvocation="119230" standardDeviationMircosecondsPerInvocation="13324"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="450" invocations="116" avgMicrosecondsPerInvocation="3885" maxMicrosecondsPerInvocation="114817" standardDeviationMircosecondsPerInvocation="12162"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="427" invocations="78" avgMicrosecondsPerInvocation="5485" maxMicrosecondsPerInvocation="55916" standardDeviationMircosecondsPerInvocation="9110"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="417" invocations="118" avgMicrosecondsPerInvocation="3542" maxMicrosecondsPerInvocation="61136" standardDeviationMircosecondsPerInvocation="9777"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="405" invocations="500" avgMicrosecondsPerInvocation="811" maxMicrosecondsPerInvocation="32575" standardDeviationMircosecondsPerInvocation="2851"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="389" invocations="240" avgMicrosecondsPerInvocation="1624" maxMicrosecondsPerInvocation="55118" standardDeviationMircosecondsPerInvocation="5324"/>
      <ClassProfile name="com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine" totalMilliseconds="382" invocations="116" avgMicrosecondsPerInvocation="3295" maxMicrosecondsPerInvocation="85780" standardDeviationMircosecondsPerInvocation="9979"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="375" invocations="556" avgMicrosecondsPerInvocation="675" maxMicrosecondsPerInvocation="45622" standardDeviationMircosecondsPerInvocation="2522"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="367" invocations="116" avgMicrosecondsPerInvocation="3170" maxMicrosecondsPerInvocation="66648" standardDeviationMircosecondsPerInvocation="8717"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DefaultEncodingDetector" totalMilliseconds="359" invocations="3" avgMicrosecondsPerInvocation="119924" maxMicrosecondsPerInvocation="359692" standardDeviationMircosecondsPerInvocation="169541"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="321" invocations="78" avgMicrosecondsPerInvocation="4125" maxMicrosecondsPerInvocation="61286" standardDeviationMircosecondsPerInvocation="8937"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="315" invocations="78" avgMicrosecondsPerInvocation="4042" maxMicrosecondsPerInvocation="39324" standardDeviationMircosecondsPerInvocation="7834"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="297" invocations="78" avgMicrosecondsPerInvocation="3818" maxMicrosecondsPerInvocation="33800" standardDeviationMircosecondsPerInvocation="7181"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="255" invocations="78" avgMicrosecondsPerInvocation="3274" maxMicrosecondsPerInvocation="33162" standardDeviationMircosecondsPerInvocation="6498"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="238" invocations="116" avgMicrosecondsPerInvocation="2056" maxMicrosecondsPerInvocation="138201" standardDeviationMircosecondsPerInvocation="12894"/>
      <ClassProfile name="com.h3xstream.findsecbugs.ExternalConfigurationControlDetector" totalMilliseconds="232" invocations="3" avgMicrosecondsPerInvocation="77383" maxMicrosecondsPerInvocation="211338" standardDeviationMircosecondsPerInvocation="94862"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="191" invocations="78" avgMicrosecondsPerInvocation="2453" maxMicrosecondsPerInvocation="36576" standardDeviationMircosecondsPerInvocation="5442"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.collect.CollectMethodsReturningImmutableCollections" totalMilliseconds="188" invocations="78" avgMicrosecondsPerInvocation="2421" maxMicrosecondsPerInvocation="31346" standardDeviationMircosecondsPerInvocation="5755"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" totalMilliseconds="181" invocations="78" avgMicrosecondsPerInvocation="2331" maxMicrosecondsPerInvocation="20657" standardDeviationMircosecondsPerInvocation="4183"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.redirect.UnvalidatedRedirectDetector" totalMilliseconds="179" invocations="3" avgMicrosecondsPerInvocation="59731" maxMicrosecondsPerInvocation="149464" standardDeviationMircosecondsPerInvocation="63461"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ExplicitSerialization" totalMilliseconds="175" invocations="78" avgMicrosecondsPerInvocation="2251" maxMicrosecondsPerInvocation="60962" standardDeviationMircosecondsPerInvocation="10444"/>
      <ClassProfile name="com.h3xstream.findsecbugs.file.PathTraversalDetector" totalMilliseconds="148" invocations="3" avgMicrosecondsPerInvocation="49364" maxMicrosecondsPerInvocation="113774" standardDeviationMircosecondsPerInvocation="45544"/>
      <ClassProfile name="com.h3xstream.findsecbugs.CrlfLogInjectionDetector" totalMilliseconds="146" invocations="3" avgMicrosecondsPerInvocation="48855" maxMicrosecondsPerInvocation="125600" standardDeviationMircosecondsPerInvocation="54523"/>
      <ClassProfile name="com.h3xstream.findsecbugs.HttpResponseSplittingDetector" totalMilliseconds="145" invocations="3" avgMicrosecondsPerInvocation="48480" maxMicrosecondsPerInvocation="120886" standardDeviationMircosecondsPerInvocation="51635"/>
      <ClassProfile name="com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetector" totalMilliseconds="142" invocations="3" avgMicrosecondsPerInvocation="47409" maxMicrosecondsPerInvocation="122676" standardDeviationMircosecondsPerInvocation="53463"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="137" invocations="3" avgMicrosecondsPerInvocation="45720" maxMicrosecondsPerInvocation="82234" standardDeviationMircosecondsPerInvocation="34146"/>
      <ClassProfile name="com.h3xstream.findsecbugs.xpath.XPathInjectionDetector" totalMilliseconds="130" invocations="3" avgMicrosecondsPerInvocation="43602" maxMicrosecondsPerInvocation="110758" standardDeviationMircosecondsPerInvocation="47741"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.command.CommandInjectionDetector" totalMilliseconds="129" invocations="3" avgMicrosecondsPerInvocation="43122" maxMicrosecondsPerInvocation="101885" standardDeviationMircosecondsPerInvocation="41582"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationAttributeDetector" totalMilliseconds="128" invocations="3" avgMicrosecondsPerInvocation="42918" maxMicrosecondsPerInvocation="108210" standardDeviationMircosecondsPerInvocation="46464"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.sql.SqlInjectionDetector" totalMilliseconds="128" invocations="3" avgMicrosecondsPerInvocation="42837" maxMicrosecondsPerInvocation="98203" standardDeviationMircosecondsPerInvocation="39161"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.obl.ObligationAnalysis" totalMilliseconds="122" invocations="115" avgMicrosecondsPerInvocation="1062" maxMicrosecondsPerInvocation="18000" standardDeviationMircosecondsPerInvocation="3173"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindInconsistentSync2" totalMilliseconds="120" invocations="3" avgMicrosecondsPerInvocation="40132" maxMicrosecondsPerInvocation="72667" standardDeviationMircosecondsPerInvocation="25150"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="115" invocations="105" avgMicrosecondsPerInvocation="1099" maxMicrosecondsPerInvocation="18269" standardDeviationMircosecondsPerInvocation="3003"/>
      <ClassProfile name="com.h3xstream.findsecbugs.crypto.EsapiEncryptorDetector" totalMilliseconds="115" invocations="3" avgMicrosecondsPerInvocation="38415" maxMicrosecondsPerInvocation="107770" standardDeviationMircosecondsPerInvocation="49062"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetector" totalMilliseconds="111" invocations="3" avgMicrosecondsPerInvocation="37175" maxMicrosecondsPerInvocation="98665" standardDeviationMircosecondsPerInvocation="43517"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
