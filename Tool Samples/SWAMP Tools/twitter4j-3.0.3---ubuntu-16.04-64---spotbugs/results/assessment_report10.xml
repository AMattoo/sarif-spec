<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.1.0" sequence="0" timestamp="1513619224000" analysisTimestamp="1513619489485" release="">
  <Project projectName="twitter4j-3.0.3">
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/util/StringUtilTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/FavoritesResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/DirectMessagesResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SearchAPITest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/async/DispatcherTest$IncrementTask.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterTest$2.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SizeofStatusChecker.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/util/ParseUtilTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TimelineResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/MBeanServerRunner.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/http/HttpClientTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/http/PostParameterTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SuggestedUsersResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TweetsResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/json/UserJSONImplTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/KryoSerializationTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterTestBase$TestUserInfo.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/UsersResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/Twitter4JTestSuite.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/async/DispatcherTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/conf/ConfigurationTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/json/RateLimitStatusJSONImplTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterExceptionTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/FriendsFollowersResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/PlaceGeoResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterTest$1.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TrendsResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/auth/OAuthTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/MBeansIntegrationTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/util/CharacterUtilTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SSLTestUnit.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/management/MBeansTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/UndocumentedResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/util/TimeSpanConverterTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/PagingTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/AuthorizationTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/http/BASE64EncoderTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/TwitterTestBase.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/json/HTMLEntityTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SpamReportingResourceTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/internal/json/RateLimitStatusJSONImplTest$MockHttpResponse.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/ListResourcesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/HelpResoursesTest.class</Jar>
    <Jar>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes/twitter4j/SavedSearchesResourcesTest.class</Jar>
    <AuxClasspathEntry>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/test-classes</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/target/classes</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/junit/junit/4.10/junit-4.10.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/com/googlecode/kryo/1.04/kryo-1.04.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/asm/asm/3.2/asm-3.2.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/com/googlecode/reflectasm/1.01/reflectasm-1.01.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/com/googlecode/minlog/1.2/minlog-1.2.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/org/slf4j/slf4j-api/1.7.2/slf4j-api-1.7.2.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar</AuxClasspathEntry>
    <AuxClasspathEntry>/home/kupsch/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar</AuxClasspathEntry>
    <SrcDir>/home/kupsch/build/pkg1/twitter4j-3.0.3/twitter4j-core/src/test/java</SrcDir>
    <Plugin id="com.h3xstream.findsecbugs" enabled="true"/>
    <Plugin id="com.mebigfatguy.fbcontrib" enabled="true"/>
  </Project>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="ea660669360559df85f48d5036e3b447" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.AuthorizationTest.testOAuthInstance() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.AuthorizationTest" primary="true">
      <SourceLine classname="twitter4j.AuthorizationTest" start="30" end="64" sourcefile="AuthorizationTest.java" sourcepath="twitter4j/AuthorizationTest.java" relSourcepath="twitter4j/AuthorizationTest.java">
        <Message>At AuthorizationTest.java:[lines 30-64]</Message>
      </SourceLine>
      <Message>In class twitter4j.AuthorizationTest</Message>
    </Class>
    <Method classname="twitter4j.AuthorizationTest" name="testOAuthInstance" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.AuthorizationTest" start="50" end="64" startBytecode="0" endBytecode="203" sourcefile="AuthorizationTest.java" sourcepath="twitter4j/AuthorizationTest.java" relSourcepath="twitter4j/AuthorizationTest.java"/>
      <Message>In method twitter4j.AuthorizationTest.testOAuthInstance()</Message>
    </Method>
    <SourceLine classname="twitter4j.AuthorizationTest" primary="true" start="51" end="51" startBytecode="16" endBytecode="16" sourcefile="AuthorizationTest.java" sourcepath="twitter4j/AuthorizationTest.java" relSourcepath="twitter4j/AuthorizationTest.java">
      <Message>At AuthorizationTest.java:[line 51]</Message>
    </SourceLine>
    <String value="getProperty(Ljava/lang/String;)Ljava/lang/String;">
      <Message>Value getProperty(Ljava/lang/String;)Ljava/lang/String;</Message>
    </String>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="e0a0f825b238c0c5bb58487dc252b111" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to user in twitter4j.ListResourcesTest.testListMemberMethods()</LongMessage>
    <Class classname="twitter4j.ListResourcesTest" primary="true">
      <SourceLine classname="twitter4j.ListResourcesTest" start="28" end="371" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java">
        <Message>At ListResourcesTest.java:[lines 28-371]</Message>
      </SourceLine>
      <Message>In class twitter4j.ListResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.ListResourcesTest" name="testListMemberMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.ListResourcesTest" start="102" end="158" startBytecode="0" endBytecode="240" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java"/>
      <Message>In method twitter4j.ListResourcesTest.testListMemberMethods()</Message>
    </Method>
    <LocalVariable name="user" register="3" pc="30" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named user</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.ListResourcesTest" primary="true" start="106" end="106" startBytecode="29" endBytecode="29" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java">
      <Message>At ListResourcesTest.java:[line 106]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="user"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="82fd83d459946743dbba3e9548042f10" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to user in twitter4j.ListResourcesTest.testListSubscribersMethods()</LongMessage>
    <Class classname="twitter4j.ListResourcesTest" primary="true">
      <SourceLine classname="twitter4j.ListResourcesTest" start="28" end="371" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java">
        <Message>At ListResourcesTest.java:[lines 28-371]</Message>
      </SourceLine>
      <Message>In class twitter4j.ListResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.ListResourcesTest" name="testListSubscribersMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.ListResourcesTest" start="254" end="316" startBytecode="0" endBytecode="149" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java"/>
      <Message>In method twitter4j.ListResourcesTest.testListSubscribersMethods()</Message>
    </Method>
    <LocalVariable name="user" register="4" pc="325" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named user</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.ListResourcesTest" primary="true" start="306" end="306" startBytecode="323" endBytecode="323" sourcefile="ListResourcesTest.java" sourcepath="twitter4j/ListResourcesTest.java" relSourcepath="twitter4j/ListResourcesTest.java">
      <Message>At ListResourcesTest.java:[line 306]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="user"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="51d4151cc3fe9516f6196fd58e9d9355" instanceOccurrenceNum="0" instanceOccurrenceMax="2">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.PagingTest.testPaging() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.PagingTest" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="25" end="134" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
        <Message>At PagingTest.java:[lines 25-134]</Message>
      </SourceLine>
      <Message>In class twitter4j.PagingTest</Message>
    </Class>
    <Method classname="twitter4j.PagingTest" name="testPaging" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="38" end="120" startBytecode="0" endBytecode="774" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java"/>
      <Message>In method twitter4j.PagingTest.testPaging()</Message>
    </Method>
    <SourceLine classname="twitter4j.PagingTest" primary="true" start="60" end="60" startBytecode="97" endBytecode="97" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
      <Message>At PagingTest.java:[line 60]</Message>
    </SourceLine>
    <String value="asPostParameterList()Ljava/util/List;">
      <Message>Value asPostParameterList()Ljava/util/List;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="51d4151cc3fe9516f6196fd58e9d9355" instanceOccurrenceNum="1" instanceOccurrenceMax="2">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.PagingTest.testPaging() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.PagingTest" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="25" end="134" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
        <Message>At PagingTest.java:[lines 25-134]</Message>
      </SourceLine>
      <Message>In class twitter4j.PagingTest</Message>
    </Class>
    <Method classname="twitter4j.PagingTest" name="testPaging" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="38" end="120" startBytecode="0" endBytecode="774" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java"/>
      <Message>In method twitter4j.PagingTest.testPaging()</Message>
    </Method>
    <SourceLine classname="twitter4j.PagingTest" primary="true" start="91" end="91" startBytecode="232" endBytecode="232" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
      <Message>At PagingTest.java:[line 91]</Message>
    </SourceLine>
    <String value="asPostParameterList()Ljava/util/List;">
      <Message>Value asPostParameterList()Ljava/util/List;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="51d4151cc3fe9516f6196fd58e9d9355" instanceOccurrenceNum="2" instanceOccurrenceMax="2">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.PagingTest.testPaging() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.PagingTest" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="25" end="134" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
        <Message>At PagingTest.java:[lines 25-134]</Message>
      </SourceLine>
      <Message>In class twitter4j.PagingTest</Message>
    </Class>
    <Method classname="twitter4j.PagingTest" name="testPaging" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.PagingTest" start="38" end="120" startBytecode="0" endBytecode="774" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java"/>
      <Message>In method twitter4j.PagingTest.testPaging()</Message>
    </Method>
    <SourceLine classname="twitter4j.PagingTest" primary="true" start="113" end="113" startBytecode="330" endBytecode="330" sourcefile="PagingTest.java" sourcepath="twitter4j/PagingTest.java" relSourcepath="twitter4j/PagingTest.java">
      <Message>At PagingTest.java:[line 113]</Message>
    </SourceLine>
    <String value="asPostParameterList()Ljava/util/List;">
      <Message>Value asPostParameterList()Ljava/util/List;</Message>
    </String>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="7c12a02c6da5612e58aa85e0957b4e7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to result in twitter4j.SearchAPITest.testSearch()</LongMessage>
    <Class classname="twitter4j.SearchAPITest" primary="true">
      <SourceLine classname="twitter4j.SearchAPITest" start="30" end="131" sourcefile="SearchAPITest.java" sourcepath="twitter4j/SearchAPITest.java" relSourcepath="twitter4j/SearchAPITest.java">
        <Message>At SearchAPITest.java:[lines 30-131]</Message>
      </SourceLine>
      <Message>In class twitter4j.SearchAPITest</Message>
    </Class>
    <Method classname="twitter4j.SearchAPITest" name="testSearch" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.SearchAPITest" start="62" end="119" startBytecode="0" endBytecode="320" sourcefile="SearchAPITest.java" sourcepath="twitter4j/SearchAPITest.java" relSourcepath="twitter4j/SearchAPITest.java"/>
      <Message>In method twitter4j.SearchAPITest.testSearch()</Message>
    </Method>
    <LocalVariable name="result" register="9" pc="830" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named result</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.SearchAPITest" primary="true" start="118" end="118" startBytecode="828" endBytecode="828" sourcefile="SearchAPITest.java" sourcepath="twitter4j/SearchAPITest.java" relSourcepath="twitter4j/SearchAPITest.java">
      <Message>At SearchAPITest.java:[line 118]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="result"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="1" rank="15" abbrev="DLS" category="STYLE" instanceHash="8d2782ebc611b33134ae31c782b77cb3" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to statuses in twitter4j.SizeofStatusChecker.main(String[])</LongMessage>
    <Class classname="twitter4j.SizeofStatusChecker" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="29" end="45" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
        <Message>At SizeofStatusChecker.java:[lines 29-45]</Message>
      </SourceLine>
      <Message>In class twitter4j.SizeofStatusChecker</Message>
    </Class>
    <Method classname="twitter4j.SizeofStatusChecker" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="31" end="45" startBytecode="0" endBytecode="43" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java"/>
      <Message>In method twitter4j.SizeofStatusChecker.main(String[])</Message>
    </Method>
    <LocalVariable name="statuses" register="4" pc="22" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named statuses</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.SizeofStatusChecker" primary="true" start="35" end="35" startBytecode="20" endBytecode="20" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
      <Message>At SizeofStatusChecker.java:[line 35]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEAD_OBJECT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="statuses"/>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="419b8d8aa073bbd714082ed4b7dc486d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in twitter4j.SizeofStatusChecker.main(String[]): String.getBytes()</LongMessage>
    <Class classname="twitter4j.SizeofStatusChecker" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="29" end="45" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
        <Message>At SizeofStatusChecker.java:[lines 29-45]</Message>
      </SourceLine>
      <Message>In class twitter4j.SizeofStatusChecker</Message>
    </Class>
    <Method classname="twitter4j.SizeofStatusChecker" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="31" end="45" startBytecode="0" endBytecode="252" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java"/>
      <Message>In method twitter4j.SizeofStatusChecker.main(String[])</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.SizeofStatusChecker" primary="true" start="40" end="40" startBytecode="48" endBytecode="48" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
      <Message>At SizeofStatusChecker.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="f8ff2a998b531869efee39303f2a61e8" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.SizeofStatusChecker.main(String[]) encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.SizeofStatusChecker" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="29" end="45" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
        <Message>At SizeofStatusChecker.java:[lines 29-45]</Message>
      </SourceLine>
      <Message>In class twitter4j.SizeofStatusChecker</Message>
    </Class>
    <Method classname="twitter4j.SizeofStatusChecker" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="31" end="45" startBytecode="0" endBytecode="252" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java"/>
      <Message>In method twitter4j.SizeofStatusChecker.main(String[])</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.SizeofStatusChecker" primary="true" start="40" end="40" startBytecode="48" endBytecode="48" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
      <Message>At SizeofStatusChecker.java:[line 40]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="XXE_DOCUMENT" priority="2" rank="12" abbrev="SECXXEDOC" category="SECURITY" instanceHash="78bd29e75151f6cf0d245e6a96461592" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="611">
    <ShortMessage>XML parsing vulnerable to XXE (DocumentBuilder)</ShortMessage>
    <LongMessage>The use of DocumentBuilder.parse(...) is vulnerable to XML External Entity attacks</LongMessage>
    <Class classname="twitter4j.SizeofStatusChecker" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="29" end="45" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
        <Message>At SizeofStatusChecker.java:[lines 29-45]</Message>
      </SourceLine>
      <Message>In class twitter4j.SizeofStatusChecker</Message>
    </Class>
    <Method classname="twitter4j.SizeofStatusChecker" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.SizeofStatusChecker" start="31" end="45" startBytecode="0" endBytecode="252" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java"/>
      <Message>In method twitter4j.SizeofStatusChecker.main(String[])</Message>
    </Method>
    <SourceLine classname="twitter4j.SizeofStatusChecker" primary="true" start="40" end="40" startBytecode="54" endBytecode="54" sourcefile="SizeofStatusChecker.java" sourcepath="twitter4j/SizeofStatusChecker.java" relSourcepath="twitter4j/SizeofStatusChecker.java">
      <Message>At SizeofStatusChecker.java:[line 40]</Message>
    </SourceLine>
    <String value="DocumentBuilder.parse(...)">
      <Message>Value DocumentBuilder.parse(...)</Message>
    </String>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="11bafd794a298e21bff565021bf8332a" instanceOccurrenceNum="0" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.TweetsResourcesTest.testEntities() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="testEntities" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="135" end="197" startBytecode="0" endBytecode="1132" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.testEntities()</Message>
    </Method>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="150" end="150" startBytecode="184" endBytecode="184" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 150]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="11bafd794a298e21bff565021bf8332a" instanceOccurrenceNum="1" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.TweetsResourcesTest.testEntities() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="testEntities" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="135" end="197" startBytecode="0" endBytecode="1132" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.testEntities()</Message>
    </Method>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="151" end="151" startBytecode="197" endBytecode="197" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 151]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="11bafd794a298e21bff565021bf8332a" instanceOccurrenceNum="2" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.TweetsResourcesTest.testEntities() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="testEntities" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="135" end="197" startBytecode="0" endBytecode="1132" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.testEntities()</Message>
    </Method>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="152" end="152" startBytecode="220" endBytecode="220" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 152]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="c04e6fc1022aef441c17b66e44049de9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to oembed in twitter4j.TweetsResourcesTest.testOEmbed()</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="testOEmbed" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="118" end="132" startBytecode="0" endBytecode="57" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.testOEmbed()</Message>
    </Method>
    <LocalVariable name="oembed" register="1" pc="145" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named oembed</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="130" end="130" startBytecode="144" endBytecode="144" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 130]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="oembed"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="5efc7020ec91f89d4c52464798a78476" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="getRandomlyChosenFile" signature="()Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="208" end="213" startBytecode="0" endBytecode="129" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.getRandomlyChosenFile()</Message>
    </Method>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="209" end="209" startBytecode="18" endBytecode="18" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 209]</Message>
    </SourceLine>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="998f2607c004f13721f8ecd876e26ad1" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.TweetsResourcesTest" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="30" end="213" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
        <Message>At TweetsResourcesTest.java:[lines 30-213]</Message>
      </SourceLine>
      <Message>In class twitter4j.TweetsResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.TweetsResourcesTest" name="getRandomlyChosenFile" signature="()Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.TweetsResourcesTest" start="208" end="213" startBytecode="0" endBytecode="129" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java"/>
      <Message>In method twitter4j.TweetsResourcesTest.getRandomlyChosenFile()</Message>
    </Method>
    <SourceLine classname="twitter4j.TweetsResourcesTest" primary="true" start="211" end="211" startBytecode="56" endBytecode="56" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 211]</Message>
    </SourceLine>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <String value="java/lang/StringBuilder.toString()Ljava/lang/String;" role="Unknown source">
      <Message>Unknown source java/lang/StringBuilder.toString()Ljava/lang/String;</Message>
    </String>
    <String value="java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;" role="Unknown source">
      <Message>Unknown source java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;</Message>
    </String>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <SourceLine classname="twitter4j.TweetsResourcesTest" start="211" end="211" startBytecode="53" endBytecode="53" sourcefile="TweetsResourcesTest.java" sourcepath="twitter4j/TweetsResourcesTest.java" relSourcepath="twitter4j/TweetsResourcesTest.java">
      <Message>At TweetsResourcesTest.java:[line 211]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NPMC_NON_PRODUCTIVE_METHOD_CALL" priority="2" rank="7" abbrev="NPMC" category="CORRECTNESS" instanceHash="23762caf0af798854ba9d82de81ba87e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method ignores return value of a non mutating method</ShortMessage>
    <LongMessage>Method twitter4j.TwitterExceptionTest.testException() ignores return value of a non mutating method</LongMessage>
    <Class classname="twitter4j.TwitterExceptionTest" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="28" end="73" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
        <Message>At TwitterExceptionTest.java:[lines 28-73]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterExceptionTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterExceptionTest" name="testException" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="41" end="56" startBytecode="0" endBytecode="234" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java"/>
      <Message>In method twitter4j.TwitterExceptionTest.testException()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterExceptionTest" primary="true" start="55" end="55" startBytecode="101" endBytecode="101" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
      <Message>At TwitterExceptionTest.java:[line 55]</Message>
    </SourceLine>
    <String value="twitter4j/TwitterException@toString()Ljava/lang/String;">
      <Message>Value twitter4j/TwitterException@toString()Ljava/lang/String;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="447f7814fb2a24547988fd511a86e0d4" instanceOccurrenceNum="0" instanceOccurrenceMax="1">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.TwitterExceptionTest.testException() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.TwitterExceptionTest" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="28" end="73" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
        <Message>At TwitterExceptionTest.java:[lines 28-73]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterExceptionTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterExceptionTest" name="testException" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="41" end="56" startBytecode="0" endBytecode="234" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java"/>
      <Message>In method twitter4j.TwitterExceptionTest.testException()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterExceptionTest" primary="true" start="46" end="46" startBytecode="46" endBytecode="46" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
      <Message>At TwitterExceptionTest.java:[line 46]</Message>
    </SourceLine>
    <String value="getExceptionCode()Ljava/lang/String;">
      <Message>Value getExceptionCode()Ljava/lang/String;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="447f7814fb2a24547988fd511a86e0d4" instanceOccurrenceNum="1" instanceOccurrenceMax="1">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.TwitterExceptionTest.testException() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.TwitterExceptionTest" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="28" end="73" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
        <Message>At TwitterExceptionTest.java:[lines 28-73]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterExceptionTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterExceptionTest" name="testException" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="41" end="56" startBytecode="0" endBytecode="234" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java"/>
      <Message>In method twitter4j.TwitterExceptionTest.testException()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterExceptionTest" primary="true" start="50" end="50" startBytecode="62" endBytecode="62" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
      <Message>At TwitterExceptionTest.java:[line 50]</Message>
    </SourceLine>
    <String value="getExceptionCode()Ljava/lang/String;">
      <Message>Value getExceptionCode()Ljava/lang/String;</Message>
    </String>
  </BugInstance>
  <BugInstance type="SSCU_SUSPICIOUS_SHADED_CLASS_USE" priority="2" rank="7" abbrev="SSCU" category="CORRECTNESS" instanceHash="605486c25ed37c7e7e1529242bdcdd54" instanceOccurrenceNum="0" instanceOccurrenceMax="1">
    <ShortMessage>Method calls a method from a class that has been shaded by a 3rdparty jar</ShortMessage>
    <LongMessage>Method twitter4j.TwitterExceptionTest.testGetLong() calls a method from a class that has been shaded by a 3rdparty jar</LongMessage>
    <Class classname="twitter4j.TwitterExceptionTest" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="28" end="73" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
        <Message>At TwitterExceptionTest.java:[lines 28-73]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterExceptionTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterExceptionTest" name="testGetLong" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="71" end="73" startBytecode="0" endBytecode="82" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java"/>
      <Message>In method twitter4j.TwitterExceptionTest.testGetLong()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterExceptionTest" primary="true" start="71" end="71" startBytecode="6" endBytecode="6" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
      <Message>At TwitterExceptionTest.java:[line 71]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SSCU_SUSPICIOUS_SHADED_CLASS_USE" priority="2" rank="7" abbrev="SSCU" category="CORRECTNESS" instanceHash="605486c25ed37c7e7e1529242bdcdd54" instanceOccurrenceNum="1" instanceOccurrenceMax="1">
    <ShortMessage>Method calls a method from a class that has been shaded by a 3rdparty jar</ShortMessage>
    <LongMessage>Method twitter4j.TwitterExceptionTest.testGetLong() calls a method from a class that has been shaded by a 3rdparty jar</LongMessage>
    <Class classname="twitter4j.TwitterExceptionTest" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="28" end="73" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
        <Message>At TwitterExceptionTest.java:[lines 28-73]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterExceptionTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterExceptionTest" name="testGetLong" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterExceptionTest" start="71" end="73" startBytecode="0" endBytecode="82" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java"/>
      <Message>In method twitter4j.TwitterExceptionTest.testGetLong()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterExceptionTest" primary="true" start="72" end="72" startBytecode="16" endBytecode="16" sourcefile="TwitterExceptionTest.java" sourcepath="twitter4j/TwitterExceptionTest.java" relSourcepath="twitter4j/TwitterExceptionTest.java">
      <Message>At TwitterExceptionTest.java:[line 72]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBJECT_DESERIALIZATION" priority="1" rank="10" abbrev="SECOBDES" category="SECURITY" instanceHash="782d879910fa09083946fa201332b2d7" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="502">
    <ShortMessage>Object deserialization is used in {1}</ShortMessage>
    <LongMessage>Object deserialization is used in twitter4j.TwitterTest.assertDeserializedFormIsNotEqual(Object)</LongMessage>
    <Class classname="twitter4j.TwitterTest" primary="true">
      <SourceLine classname="twitter4j.TwitterTest" start="34" end="126" sourcefile="TwitterTest.java" sourcepath="twitter4j/TwitterTest.java" relSourcepath="twitter4j/TwitterTest.java">
        <Message>At TwitterTest.java:[lines 34-126]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTest</Message>
    </Class>
    <Method classname="twitter4j.TwitterTest" name="assertDeserializedFormIsNotEqual" signature="(Ljava/lang/Object;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.TwitterTest" start="116" end="126" startBytecode="0" endBytecode="207" sourcefile="TwitterTest.java" sourcepath="twitter4j/TwitterTest.java" relSourcepath="twitter4j/TwitterTest.java"/>
      <Message>In method twitter4j.TwitterTest.assertDeserializedFormIsNotEqual(Object)</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTest" primary="true" start="122" end="122" startBytecode="50" endBytecode="50" sourcefile="TwitterTest.java" sourcepath="twitter4j/TwitterTest.java" relSourcepath="twitter4j/TwitterTest.java">
      <Message>At TwitterTest.java:[line 122]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_FOR_PARSING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="be0d68343aea81a2502c29a29723c059" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxing/unboxing to parse a primitive</ShortMessage>
    <LongMessage>Boxing/unboxing to parse a primitive twitter4j.TwitterTestBase.setUp()</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="29" end="110" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 29-110]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="64" end="102" startBytecode="0" endBytecode="579" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="intValue" signature="()I" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="893" end="893" startBytecode="0" endBytecode="28" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.intValue()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="parseInt" signature="(Ljava/lang/String;)I" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Integer.parseInt(String) instead</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="89" end="89" startBytecode="292" endBytecode="292" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NAB_NEEDLESS_BOXING_PARSE" priority="2" rank="18" abbrev="NAB" category="PERFORMANCE" instanceHash="51ccc9ff349116dc0f46988447f1c638" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method converts String to primitive using excessive boxing</ShortMessage>
    <LongMessage>Method twitter4j.TwitterTestBase.setUp() converts String to primitive using excessive boxing</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="29" end="110" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 29-110]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="64" end="102" startBytecode="0" endBytecode="579" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="89" end="89" startBytecode="292" endBytecode="292" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 89]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="a540a3168a28b6f9647d9bd28ea3917c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource on checked exception</ShortMessage>
    <LongMessage>twitter4j.TwitterTestBase.setUp() may fail to clean up java.io.InputStream on checked exception</LongMessage>
    <Class classname="twitter4j.TwitterTestBase" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="29" end="110" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 29-110]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase" start="64" end="102" startBytecode="0" endBytecode="579" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method twitter4j.TwitterTestBase.setUp()</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="45" end="364" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-364]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="twitter4j.TwitterTestBase" primary="true" start="65" end="65" startBytecode="9" endBytecode="9" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at TwitterTestBase.java:[line 65] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.TwitterTestBase" start="66" end="66" startBytecode="13" endBytecode="13" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at TwitterTestBase.java:[line 66]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_FOR_PARSING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="afb960983942c7e9f7e7019975f21479" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxing/unboxing to parse a primitive</ShortMessage>
    <LongMessage>Boxing/unboxing to parse a primitive new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 49-55]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase$TestUserInfo" name="&lt;init&gt;" signature="(Ltwitter4j/TwitterTestBase;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" startBytecode="0" endBytecode="241" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</Message>
    </Method>
    <Method classname="java.lang.Long" name="longValue" signature="()J" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Long" start="1000" end="1000" startBytecode="0" endBytecode="28" sourcefile="Long.java" sourcepath="java/lang/Long.java"/>
      <Message>Called method Long.longValue()</Message>
    </Method>
    <Method classname="java.lang.Long" name="parseLong" signature="(Ljava/lang/String;)J" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Long.parseLong(String) instead</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="52" end="52" startBytecode="99" endBytecode="99" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NAB_NEEDLESS_BOXING_PARSE" priority="2" rank="18" abbrev="NAB" category="PERFORMANCE" instanceHash="7518cb1eb003e6469e9a61b54ef46c71" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method converts String to primitive using excessive boxing</ShortMessage>
    <LongMessage>Method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String) converts String to primitive using excessive boxing</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 49-55]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Method classname="twitter4j.TwitterTestBase$TestUserInfo" name="&lt;init&gt;" signature="(Ltwitter4j/TwitterTestBase;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" startBytecode="0" endBytecode="241" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>In method new twitter4j.TwitterTestBase$TestUserInfo(TwitterTestBase, String)</Message>
    </Method>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="52" end="52" startBytecode="99" endBytecode="99" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 52]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="c827daba610f3af4fc49406b4ebdcc92" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: twitter4j.TwitterTestBase$TestUserInfo.accessToken</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 49-55]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Field classname="twitter4j.TwitterTestBase$TestUserInfo" name="accessToken" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>In TwitterTestBase.java</Message>
      </SourceLine>
      <Message>Field twitter4j.TwitterTestBase$TestUserInfo.accessToken</Message>
    </Field>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="53" end="53" startBytecode="132" endBytecode="132" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 53]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" priority="2" rank="18" abbrev="UrF" category="STYLE" instanceHash="615ddbd269fd8de6d7fcd464965f11bd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Unread public/protected field</ShortMessage>
    <LongMessage>Unread public/protected field: twitter4j.TwitterTestBase$TestUserInfo.accessTokenSecret</LongMessage>
    <Class classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" start="49" end="55" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>At TwitterTestBase.java:[lines 49-55]</Message>
      </SourceLine>
      <Message>In class twitter4j.TwitterTestBase$TestUserInfo</Message>
    </Class>
    <Field classname="twitter4j.TwitterTestBase$TestUserInfo" name="accessTokenSecret" signature="Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
        <Message>In TwitterTestBase.java</Message>
      </SourceLine>
      <Message>Field twitter4j.TwitterTestBase$TestUserInfo.accessTokenSecret</Message>
    </Field>
    <SourceLine classname="twitter4j.TwitterTestBase$TestUserInfo" primary="true" start="54" end="54" startBytecode="162" endBytecode="162" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java">
      <Message>At TwitterTestBase.java:[line 54]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="2fca109fb7c5cbf8300c329f21f3731d" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to previousUser in twitter4j.UsersResourcesTest.testShowUser()</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="testShowUser" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="43" end="112" startBytecode="0" endBytecode="239" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.testShowUser()</Message>
    </Method>
    <LocalVariable name="previousUser" register="3" pc="560" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named previousUser</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="107" end="107" startBytecode="559" endBytecode="559" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 107]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.COPY_VALUE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="previousUser"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="ea4fd520d47623598970eef3c2d8a413" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource</ShortMessage>
    <LongMessage>twitter4j.UsersResourcesTest.testAccountProfileImageUpdates() may fail to clean up java.io.InputStream</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="testAccountProfileImageUpdates" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="248" end="255" startBytecode="0" endBytecode="159" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.testAccountProfileImageUpdates()</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="45" end="364" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-364]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="248" end="248" startBytecode="11" endBytecode="11" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at UsersResourcesTest.java:[line 248] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="249" end="249" startBytecode="20" endBytecode="20" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at UsersResourcesTest.java:[line 249]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="251" end="251" startBytecode="27" endBytecode="27" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at UsersResourcesTest.java:[line 251]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="253" end="253" startBytecode="59" endBytecode="59" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at UsersResourcesTest.java:[line 253]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="254" end="254" startBytecode="66" endBytecode="66" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at UsersResourcesTest.java:[line 254]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="255" end="255" startBytecode="77" endBytecode="77" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at UsersResourcesTest.java:[line 255]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="c0238d451f755bf6fff218fffc9942c2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="getRandomlyChosenFile" signature="([Ljava/lang/String;)Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="277" end="282" startBytecode="0" endBytecode="135" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.getRandomlyChosenFile(String[])</Message>
    </Method>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="278" end="278" startBytecode="16" endBytecode="16" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 278]</Message>
    </SourceLine>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="160" end="160" startBytecode="7" endBytecode="7" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 160]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="273" end="273" startBytecode="3" endBytecode="3" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 273]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PATH_TRAVERSAL_IN" priority="2" rank="12" abbrev="SECPTI" category="SECURITY" instanceHash="bc4789f415367d23d402e43df1b6641b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="22">
    <ShortMessage>Potential Path Traversal (file read)</ShortMessage>
    <LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="getRandomlyChosenFile" signature="([Ljava/lang/String;)Ljava/io/File;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="277" end="282" startBytecode="0" endBytecode="135" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.getRandomlyChosenFile(String[])</Message>
    </Method>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="280" end="280" startBytecode="52" endBytecode="52" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 280]</Message>
    </SourceLine>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <String value="java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;" role="Unknown source">
      <Message>Unknown source java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;</Message>
    </String>
    <String value="java/lang/StringBuilder.toString()Ljava/lang/String;" role="Unknown source">
      <Message>Unknown source java/lang/StringBuilder.toString()Ljava/lang/String;</Message>
    </String>
    <String value="java/io/File.&lt;init&gt;(Ljava/lang/String;)V" role="Sink method">
      <Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message>
    </String>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="160" end="160" startBytecode="7" endBytecode="7" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 160]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="273" end="273" startBytecode="3" endBytecode="3" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 273]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.UsersResourcesTest" start="280" end="280" startBytecode="46" endBytecode="46" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 280]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SPP_TOSTRING_ON_STRING" priority="2" rank="7" abbrev="SPP" category="CORRECTNESS" instanceHash="9aaae5ebc0096a6fff9b01832a33c176" instanceOccurrenceNum="0" instanceOccurrenceMax="1">
    <ShortMessage>Method calls toString() on a String</ShortMessage>
    <LongMessage>Method twitter4j.UsersResourcesTest.testAccountMethods() calls toString() on a String</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="testAccountMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="167" end="245" startBytecode="0" endBytecode="1365" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.testAccountMethods()</Message>
    </Method>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="189" end="189" startBytecode="231" endBytecode="231" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 189]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SPP_TOSTRING_ON_STRING" priority="2" rank="7" abbrev="SPP" category="CORRECTNESS" instanceHash="9aaae5ebc0096a6fff9b01832a33c176" instanceOccurrenceNum="1" instanceOccurrenceMax="1">
    <ShortMessage>Method calls toString() on a String</ShortMessage>
    <LongMessage>Method twitter4j.UsersResourcesTest.testAccountMethods() calls toString() on a String</LongMessage>
    <Class classname="twitter4j.UsersResourcesTest" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="31" end="306" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
        <Message>At UsersResourcesTest.java:[lines 31-306]</Message>
      </SourceLine>
      <Message>In class twitter4j.UsersResourcesTest</Message>
    </Class>
    <Method classname="twitter4j.UsersResourcesTest" name="testAccountMethods" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.UsersResourcesTest" start="167" end="245" startBytecode="0" endBytecode="1365" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java"/>
      <Message>In method twitter4j.UsersResourcesTest.testAccountMethods()</Message>
    </Method>
    <SourceLine classname="twitter4j.UsersResourcesTest" primary="true" start="191" end="191" startBytecode="271" endBytecode="271" sourcefile="UsersResourcesTest.java" sourcepath="twitter4j/UsersResourcesTest.java" relSourcepath="twitter4j/UsersResourcesTest.java">
      <Message>At UsersResourcesTest.java:[line 191]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="e931a400dd07d82268d4ca62cacb5d17" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to response in twitter4j.auth.OAuthTest.testBrowserClient()</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testBrowserClient" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="192" end="225" startBytecode="0" endBytecode="114" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testBrowserClient()</Message>
    </Method>
    <LocalVariable name="response" register="4" pc="211" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named response</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="219" end="219" startBytecode="209" endBytecode="209" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 219]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="response"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="191c9ce35efe004a530f037788a9534" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to http in twitter4j.auth.OAuthTest.testBrowserClientWithCustomCallback()</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testBrowserClientWithCustomCallback" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="229" end="268" startBytecode="0" endBytecode="144" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testBrowserClientWithCustomCallback()</Message>
    </Method>
    <LocalVariable name="http" register="3" pc="19" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named http</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="237" end="237" startBytecode="18" endBytecode="18" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 237]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEAD_OBJECT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.KILLED_BY_SUBSEQUENT_STORE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="http"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="f0347b8c2c35199732f124980dc3a707" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to response in twitter4j.auth.OAuthTest.testSigninWithTwitter()</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testSigninWithTwitter" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="152" end="188" startBytecode="0" endBytecode="114" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testSigninWithTwitter()</Message>
    </Method>
    <LocalVariable name="response" register="4" pc="211" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named response</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="181" end="181" startBytecode="209" endBytecode="209" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 181]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="response"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.TWO_STORES_MULTIPLE_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="2d604bd5976e38d7e9a02a5ac628b706" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to at in twitter4j.auth.OAuthTest.testXAuth()</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testXAuth" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="388" end="415" startBytecode="0" endBytecode="109" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testXAuth()</Message>
    </Method>
    <LocalVariable name="at" register="6" pc="167" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named at</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="407" end="407" startBytecode="165" endBytecode="165" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 407]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="at"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="NPMC_NON_PRODUCTIVE_METHOD_CALL" priority="2" rank="7" abbrev="NPMC" category="CORRECTNESS" instanceHash="4462610f55613cbee28d4ef74a2e08e3" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method ignores return value of a non mutating method</ShortMessage>
    <LongMessage>Method twitter4j.auth.OAuthTest.testDesktopClient() ignores return value of a non mutating method</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testDesktopClient" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="76" end="140" startBytecode="0" endBytecode="859" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testDesktopClient()</Message>
    </Method>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="90" end="90" startBytecode="58" endBytecode="58" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 90]</Message>
    </SourceLine>
    <String value="twitter4j/auth/RequestToken@hashCode()I">
      <Message>Value twitter4j/auth/RequestToken@hashCode()I</Message>
    </String>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="d919ff8b25163f51cab499b97d607ea1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource on checked exception</ShortMessage>
    <LongMessage>twitter4j.auth.OAuthTest.testXAuth() may fail to clean up java.io.InputStream on checked exception</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testXAuth" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="388" end="415" startBytecode="0" endBytecode="455" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testXAuth()</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="45" end="364" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-364]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="399" end="399" startBytecode="86" endBytecode="86" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at OAuthTest.java:[line 399] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.auth.OAuthTest" start="400" end="400" startBytecode="90" endBytecode="90" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at OAuthTest.java:[line 400]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.auth.OAuthTest" start="403" end="403" startBytecode="106" endBytecode="106" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at OAuthTest.java:[line 403]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.auth.OAuthTest" start="404" end="404" startBytecode="115" endBytecode="115" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at OAuthTest.java:[line 404]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugInstance type="OS_OPEN_STREAM" priority="2" rank="16" abbrev="OS" category="BAD_PRACTICE" instanceHash="600b94677ff5dbf0c5c72615bf30776e" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to close stream</ShortMessage>
    <LongMessage>twitter4j.auth.OAuthTest.testXAuth() may fail to close stream</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testXAuth" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="388" end="415" startBytecode="0" endBytecode="109" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testXAuth()</Message>
    </Method>
    <Type descriptor="Ljava/io/InputStream;" role="TYPE_CLOSEIT">
      <SourceLine classname="java.io.InputStream" start="45" end="364" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-364]</Message>
      </SourceLine>
      <Message>Need to close java.io.InputStream </Message>
    </Type>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="399" end="399" startBytecode="86" endBytecode="86" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 399]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="1efd059d82cae8df67e273ae94d8bf25" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.auth.OAuthTest.testBrowserClientWithCustomCallback() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testBrowserClientWithCustomCallback" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="229" end="268" startBytecode="0" endBytecode="581" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testBrowserClientWithCustomCallback()</Message>
    </Method>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="246" end="246" startBytecode="91" endBytecode="91" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 246]</Message>
    </SourceLine>
    <String value="getAuthorizationURL()Ljava/lang/String;">
      <Message>Value getAuthorizationURL()Ljava/lang/String;</Message>
    </String>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" priority="2" rank="17" abbrev="RV" category="STYLE" instanceHash="8bbdce8ed5dae2287e8659884016a278" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Return value of method without side effect is ignored</ShortMessage>
    <LongMessage>Return value of RequestToken.hashCode() ignored, but method has no side effect</LongMessage>
    <Class classname="twitter4j.auth.OAuthTest" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="39" end="420" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
        <Message>At OAuthTest.java:[lines 39-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.auth.OAuthTest</Message>
    </Class>
    <Method classname="twitter4j.auth.OAuthTest" name="testDesktopClient" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.auth.OAuthTest" start="76" end="140" startBytecode="0" endBytecode="859" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java"/>
      <Message>In method twitter4j.auth.OAuthTest.testDesktopClient()</Message>
    </Method>
    <Method classname="twitter4j.auth.RequestToken" name="hashCode" signature="()I" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="twitter4j.auth.RequestToken" start="28" end="28" startBytecode="0" endBytecode="46" sourcefile="RequestToken.java" sourcepath="twitter4j/auth/RequestToken.java"/>
      <Message>Called method twitter4j.auth.RequestToken.hashCode()</Message>
    </Method>
    <SourceLine classname="twitter4j.auth.OAuthTest" primary="true" start="90" end="90" startBytecode="55" endBytecode="55" sourcefile="OAuthTest.java" sourcepath="twitter4j/auth/OAuthTest.java" relSourcepath="twitter4j/auth/OAuthTest.java">
      <Message>At OAuthTest.java:[line 90]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BED_BOGUS_EXCEPTION_DECLARATION" priority="2" rank="7" abbrev="BED" category="CORRECTNESS" instanceHash="6af1477eb210575305da33fc009d2654" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Non derivable method declares throwing an exception that isn&apos;t thrown</ShortMessage>
    <LongMessage>Non derivable method twitter4j.conf.ConfigurationTest.deleteFile(String) declares throwing an exception that isn&apos;t thrown</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="deleteFile" signature="(Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="418" end="420" startBytecode="0" endBytecode="84" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.deleteFile(String)</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="418" end="418" startBytecode="0" endBytecode="0" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 418]</Message>
    </SourceLine>
    <String value="java.io.IOException">
      <Message>Value java.io.IOException</Message>
    </String>
  </BugInstance>
  <BugInstance type="CC_CYCLOMATIC_COMPLEXITY" priority="2" rank="19" abbrev="CC" category="STYLE" instanceHash="1ed8ad31ca89965cd6bb94e8fbff54a2" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method is excessively complex</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfigurationBuilder() is excessively complex, with a cyclomatic complexity of 52</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfigurationBuilder" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="318" end="385" startBytecode="0" endBytecode="1077" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfigurationBuilder()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="318" end="318" startBytecode="0" endBytecode="0" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 318]</Message>
    </SourceLine>
    <Int value="52">
      <Message>Value 52</Message>
    </Int>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a7994af954a98ff72da7f36fd3538e56" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testSplit() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testSplit" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="62" end="67" startBytecode="0" endBytecode="114" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testSplit()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="65" end="65" startBytecode="22" endBytecode="22" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 65]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="eedf34c653b3e1e613764243e319f514" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to t in twitter4j.conf.ConfigurationTest.testConfigurationBuilder()</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfigurationBuilder" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="318" end="385" startBytecode="0" endBytecode="350" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfigurationBuilder()</Message>
    </Method>
    <LocalVariable name="t" register="3" pc="27" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named t</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="324" end="324" startBytecode="26" endBytecode="26" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 324]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="t"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="7827108cd1aeaa3f3790d79b22a4145f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to conf in twitter4j.conf.ConfigurationTest.testEnvironmentVariableBasedConfiguration()</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testEnvironmentVariableBasedConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="402" end="407" startBytecode="0" endBytecode="2" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testEnvironmentVariableBasedConfiguration()</Message>
    </Method>
    <LocalVariable name="conf" register="1" pc="4" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named conf</Message>
    </LocalVariable>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="402" end="402" startBytecode="3" endBytecode="3" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 402]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="conf"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="f233805c95087a4eca3a2ea232b50965" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in twitter4j.conf.ConfigurationTest.writeFile(String, String): new java.io.FileWriter(File)</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="writeFile" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="410" end="415" startBytecode="0" endBytecode="144" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.writeFile(String, String)</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="90" end="91" startBytecode="0" endBytecode="40" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File)</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="412" end="412" startBytecode="23" endBytecode="23" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 412]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="HARD_CODE_PASSWORD" priority="2" rank="12" abbrev="SECHCP" category="SECURITY" instanceHash="df51b96e4c4873579dd6412133ee4f86" instanceOccurrenceNum="0" instanceOccurrenceMax="1" cweid="259">
    <ShortMessage>Hard Coded Password</ShortMessage>
    <LongMessage>Hard coded password found</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="93" end="93" startBytecode="122" endBytecode="122" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 93]</Message>
    </SourceLine>
    <String value="unknown" role="Sink method">
      <Message>Sink method unknown</Message>
    </String>
    <String value="unknown" role="Sink method">
      <Message>Sink method unknown</Message>
    </String>
  </BugInstance>
  <BugInstance type="HARD_CODE_PASSWORD" priority="2" rank="12" abbrev="SECHCP" category="SECURITY" instanceHash="df51b96e4c4873579dd6412133ee4f86" instanceOccurrenceNum="1" instanceOccurrenceMax="1" cweid="259">
    <ShortMessage>Hard Coded Password</ShortMessage>
    <LongMessage>Hard coded password found</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="98" end="98" startBytecode="158" endBytecode="158" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 98]</Message>
    </SourceLine>
    <String value="unknown" role="Sink method">
      <Message>Sink method unknown</Message>
    </String>
    <String value="unknown" role="Sink method">
      <Message>Sink method unknown</Message>
    </String>
  </BugInstance>
  <BugInstance type="OBJECT_DESERIALIZATION" priority="1" rank="10" abbrev="SECOBDES" category="SECURITY" instanceHash="20acad916fb5756024107d36cceeeba8" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="502">
    <ShortMessage>Object deserialization is used in {1}</ShortMessage>
    <LongMessage>Object deserialization is used in twitter4j.conf.ConfigurationTest.serializeDeserialize(Object)</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="serializeDeserialize" signature="(Ljava/lang/Object;)Ljava/lang/Object;" isStatic="true" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="389" end="398" startBytecode="0" endBytecode="194" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.serializeDeserialize(Object)</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="395" end="395" startBytecode="50" endBytecode="50" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 395]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="aee7a483a6fa53f5a2580ab9d23d2624" instanceOccurrenceNum="0" instanceOccurrenceMax="4">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfiguration() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="89" end="89" startBytecode="96" endBytecode="96" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 89]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="aee7a483a6fa53f5a2580ab9d23d2624" instanceOccurrenceNum="1" instanceOccurrenceMax="4">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfiguration() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="116" end="116" startBytecode="263" endBytecode="263" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 116]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="aee7a483a6fa53f5a2580ab9d23d2624" instanceOccurrenceNum="2" instanceOccurrenceMax="4">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfiguration() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="143" end="143" startBytecode="474" endBytecode="474" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 143]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="aee7a483a6fa53f5a2580ab9d23d2624" instanceOccurrenceNum="3" instanceOccurrenceMax="4">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfiguration() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="162" end="162" startBytecode="590" endBytecode="590" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 162]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="aee7a483a6fa53f5a2580ab9d23d2624" instanceOccurrenceNum="4" instanceOccurrenceMax="4">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testConfiguration() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testConfiguration" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="70" end="219" startBytecode="0" endBytecode="1486" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testConfiguration()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="182" end="182" startBytecode="704" endBytecode="704" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 182]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" priority="2" rank="18" abbrev="PRMC" category="PERFORMANCE" instanceHash="476a38ed60e479208796cccb92caa44a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method appears to call the same method on the same object redundantly</ShortMessage>
    <LongMessage>Method twitter4j.conf.ConfigurationTest.testTwitter4jPrefixOmittable() appears to call the same method on the same object redundantly</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="testTwitter4jPrefixOmittable" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="249" end="259" startBytecode="0" endBytecode="160" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.testTwitter4jPrefixOmittable()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="250" end="250" startBytecode="9" endBytecode="9" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 250]</Message>
    </SourceLine>
    <String value="getProperties()Ljava/util/Properties;">
      <Message>Value getProperties()Ljava/util/Properties;</Message>
    </String>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="b651b366ccf1acb117ae4f7b72ac50c6" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.delete() ignored in twitter4j.conf.ConfigurationTest.deleteFile(String)</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="deleteFile" signature="(Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="418" end="420" startBytecode="0" endBytecode="84" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.deleteFile(String)</Message>
    </Method>
    <Method classname="java.io.File" name="delete" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1034" end="1041" startBytecode="0" endBytecode="91" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.delete()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="419" end="419" startBytecode="10" endBytecode="10" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 419]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" priority="2" rank="16" abbrev="RV" category="BAD_PRACTICE" instanceHash="3d5c24cf7cb5fad9c593e7a57f2ce39c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="253">
    <ShortMessage>Method ignores exceptional return value</ShortMessage>
    <LongMessage>Exceptional return value of java.io.File.delete() ignored in twitter4j.conf.ConfigurationTest.writeFile(String, String)</LongMessage>
    <Class classname="twitter4j.conf.ConfigurationTest" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="35" end="420" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
        <Message>At ConfigurationTest.java:[lines 35-420]</Message>
      </SourceLine>
      <Message>In class twitter4j.conf.ConfigurationTest</Message>
    </Class>
    <Method classname="twitter4j.conf.ConfigurationTest" name="writeFile" signature="(Ljava/lang/String;Ljava/lang/String;)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.conf.ConfigurationTest" start="410" end="415" startBytecode="0" endBytecode="144" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java"/>
      <Message>In method twitter4j.conf.ConfigurationTest.writeFile(String, String)</Message>
    </Method>
    <Method classname="java.io.File" name="delete" signature="()Z" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.File" start="1034" end="1041" startBytecode="0" endBytecode="91" sourcefile="File.java" sourcepath="java/io/File.java"/>
      <Message>Called method java.io.File.delete()</Message>
    </Method>
    <SourceLine classname="twitter4j.conf.ConfigurationTest" primary="true" start="411" end="411" startBytecode="10" endBytecode="10" sourcefile="ConfigurationTest.java" sourcepath="twitter4j/conf/ConfigurationTest.java" relSourcepath="twitter4j/conf/ConfigurationTest.java">
      <Message>At ConfigurationTest.java:[line 411]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="d801fe3540076e9c3bfa8fb4693da5e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in twitter4j.http.BASE64EncoderTest.testEncode(): String.getBytes()</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="32" end="32" startBytecode="4" endBytecode="4" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 32]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="33" end="33" startBytecode="17" endBytecode="17" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at BASE64EncoderTest.java:[line 33]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="34" end="34" startBytecode="30" endBytecode="30" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at BASE64EncoderTest.java:[line 34]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="35" end="35" startBytecode="43" endBytecode="43" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at BASE64EncoderTest.java:[line 35]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="36" end="36" startBytecode="56" endBytecode="56" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at BASE64EncoderTest.java:[line 36]</Message>
    </SourceLine>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="37" end="37" startBytecode="69" endBytecode="69" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at BASE64EncoderTest.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="0" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="32" end="32" startBytecode="4" endBytecode="4" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="1" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="33" end="33" startBytecode="17" endBytecode="17" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 33]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="2" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="34" end="34" startBytecode="30" endBytecode="30" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 34]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="3" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="35" end="35" startBytecode="43" endBytecode="43" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="4" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="36" end="36" startBytecode="56" endBytecode="56" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MDM_STRING_BYTES_ENCODING" priority="2" rank="7" abbrev="MDM" category="CORRECTNESS" instanceHash="8b77217090ec91d4b052fa7421d1d4d5" instanceOccurrenceNum="5" instanceOccurrenceMax="5">
    <ShortMessage>Method encodes String bytes without specifying the character encoding</ShortMessage>
    <LongMessage>Method twitter4j.http.BASE64EncoderTest.testEncode() encodes String bytes without specifying the character encoding</LongMessage>
    <Class classname="twitter4j.http.BASE64EncoderTest" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="27" end="38" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
        <Message>At BASE64EncoderTest.java:[lines 27-38]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.BASE64EncoderTest</Message>
    </Class>
    <Method classname="twitter4j.http.BASE64EncoderTest" name="testEncode" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.BASE64EncoderTest" start="32" end="38" startBytecode="0" endBytecode="144" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java"/>
      <Message>In method twitter4j.http.BASE64EncoderTest.testEncode()</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="958" end="958" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.BASE64EncoderTest" primary="true" start="37" end="37" startBytecode="69" endBytecode="69" sourcefile="BASE64EncoderTest.java" sourcepath="twitter4j/http/BASE64EncoderTest.java" relSourcepath="twitter4j/http/BASE64EncoderTest.java">
      <Message>At BASE64EncoderTest.java:[line 37]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IJU_TEARDOWN_NO_SUPER" priority="2" rank="7" abbrev="IJU" category="CORRECTNESS" instanceHash="b59b549e364b94da9573330f9608c80a" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>TestCase defines tearDown that doesn&apos;t call super.tearDown()</ShortMessage>
    <LongMessage>TestCase twitter4j.http.HttpClientTest defines tearDown that doesn&apos;t call super.tearDown()</LongMessage>
    <Class classname="twitter4j.http.HttpClientTest" primary="true">
      <SourceLine classname="twitter4j.http.HttpClientTest" start="30" end="62" sourcefile="HttpClientTest.java" sourcepath="twitter4j/http/HttpClientTest.java" relSourcepath="twitter4j/http/HttpClientTest.java">
        <Message>At HttpClientTest.java:[lines 30-62]</Message>
      </SourceLine>
      <Message>In class twitter4j.http.HttpClientTest</Message>
    </Class>
    <Method classname="twitter4j.http.HttpClientTest" name="tearDown" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.http.HttpClientTest" start="43" end="43" startBytecode="0" endBytecode="42" sourcefile="HttpClientTest.java" sourcepath="twitter4j/http/HttpClientTest.java" relSourcepath="twitter4j/http/HttpClientTest.java"/>
      <Message>In method twitter4j.http.HttpClientTest.tearDown()</Message>
    </Method>
    <Method classname="twitter4j.TwitterTestBase" name="tearDown" signature="()V" isStatic="false" role="METHOD_OVERRIDDEN">
      <SourceLine classname="twitter4j.TwitterTestBase" start="109" end="110" startBytecode="0" endBytecode="50" sourcefile="TwitterTestBase.java" sourcepath="twitter4j/TwitterTestBase.java" relSourcepath="twitter4j/TwitterTestBase.java"/>
      <Message>Overrides twitter4j.TwitterTestBase.tearDown()</Message>
    </Method>
    <SourceLine classname="twitter4j.http.HttpClientTest" primary="true" start="43" end="43" startBytecode="0" endBytecode="0" sourcefile="HttpClientTest.java" sourcepath="twitter4j/http/HttpClientTest.java" relSourcepath="twitter4j/http/HttpClientTest.java">
      <Message>At HttpClientTest.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="COM_COPIED_OVERRIDDEN_METHOD" priority="2" rank="17" abbrev="COM" category="STYLE" instanceHash="eaf205a41f1c33296676cf18035a364b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method is implemented with an exact copy of its superclass&apos;s method</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.HTMLEntityTest.setUp() is implemented with an exact copy of its superclass&apos;s method</LongMessage>
    <Class classname="twitter4j.internal.json.HTMLEntityTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" start="28" end="132" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java">
        <Message>At HTMLEntityTest.java:[lines 28-132]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.HTMLEntityTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.HTMLEntityTest" name="setUp" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" start="32" end="32" startBytecode="0" endBytecode="42" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java"/>
      <Message>In method twitter4j.internal.json.HTMLEntityTest.setUp()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" primary="true" start="32" end="32" startBytecode="4" endBytecode="4" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java">
      <Message>At HTMLEntityTest.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="COM_COPIED_OVERRIDDEN_METHOD" priority="2" rank="17" abbrev="COM" category="STYLE" instanceHash="352fbe1e14aaca0e05e98f72f9ca9b09" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method is implemented with an exact copy of its superclass&apos;s method</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.HTMLEntityTest.tearDown() is implemented with an exact copy of its superclass&apos;s method</LongMessage>
    <Class classname="twitter4j.internal.json.HTMLEntityTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" start="28" end="132" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java">
        <Message>At HTMLEntityTest.java:[lines 28-132]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.HTMLEntityTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.HTMLEntityTest" name="tearDown" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" start="35" end="35" startBytecode="0" endBytecode="42" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java"/>
      <Message>In method twitter4j.internal.json.HTMLEntityTest.tearDown()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.HTMLEntityTest" primary="true" start="35" end="35" startBytecode="4" endBytecode="4" sourcefile="HTMLEntityTest.java" sourcepath="twitter4j/internal/json/HTMLEntityTest.java" relSourcepath="twitter4j/internal/json/HTMLEntityTest.java">
      <Message>At HTMLEntityTest.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="LSC_LITERAL_STRING_COMPARISON" priority="1" rank="17" abbrev="LSC" category="STYLE" instanceHash="74b872b16c4a17bf184d6c613551cba1" instanceOccurrenceNum="0" instanceOccurrenceMax="2">
    <ShortMessage>Method makes literal string comparisons passing the literal as an argument</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String) makes literal string comparisons passing the literal as an argument</LongMessage>
    <Class classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="53" end="76" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
        <Message>At RateLimitStatusJSONImplTest.java:[lines 53-76]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse</Message>
    </Class>
    <Method classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" name="getResponseHeader" signature="(Ljava/lang/String;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="59" end="66" startBytecode="0" endBytecode="125" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String)</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true" start="59" end="59" startBytecode="3" endBytecode="3" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
      <Message>At RateLimitStatusJSONImplTest.java:[line 59]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="LSC_LITERAL_STRING_COMPARISON" priority="1" rank="17" abbrev="LSC" category="STYLE" instanceHash="74b872b16c4a17bf184d6c613551cba1" instanceOccurrenceNum="1" instanceOccurrenceMax="2">
    <ShortMessage>Method makes literal string comparisons passing the literal as an argument</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String) makes literal string comparisons passing the literal as an argument</LongMessage>
    <Class classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="53" end="76" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
        <Message>At RateLimitStatusJSONImplTest.java:[lines 53-76]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse</Message>
    </Class>
    <Method classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" name="getResponseHeader" signature="(Ljava/lang/String;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="59" end="66" startBytecode="0" endBytecode="125" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String)</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true" start="61" end="61" startBytecode="15" endBytecode="15" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
      <Message>At RateLimitStatusJSONImplTest.java:[line 61]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="LSC_LITERAL_STRING_COMPARISON" priority="1" rank="17" abbrev="LSC" category="STYLE" instanceHash="74b872b16c4a17bf184d6c613551cba1" instanceOccurrenceNum="2" instanceOccurrenceMax="2">
    <ShortMessage>Method makes literal string comparisons passing the literal as an argument</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String) makes literal string comparisons passing the literal as an argument</LongMessage>
    <Class classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="53" end="76" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
        <Message>At RateLimitStatusJSONImplTest.java:[lines 53-76]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse</Message>
    </Class>
    <Method classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" name="getResponseHeader" signature="(Ljava/lang/String;)Ljava/lang/String;" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="59" end="66" startBytecode="0" endBytecode="125" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse.getResponseHeader(String)</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true" start="63" end="63" startBytecode="27" endBytecode="27" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
      <Message>At RateLimitStatusJSONImplTest.java:[line 63]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SIC_INNER_SHOULD_BE_STATIC" priority="2" rank="18" abbrev="SIC" category="PERFORMANCE" instanceHash="86a09ef92844fe6f8212f2d150c13543" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Should be a static inner class</ShortMessage>
    <LongMessage>Should twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse be a _static_ inner class?</LongMessage>
    <Class classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" primary="true">
      <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="53" end="76" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java">
        <Message>At RateLimitStatusJSONImplTest.java:[lines 53-76]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse</Message>
    </Class>
    <SourceLine classname="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" start="53" end="76" sourcefile="RateLimitStatusJSONImplTest.java" sourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" relSourcepath="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" synthetic="true">
      <Message>At RateLimitStatusJSONImplTest.java:[lines 53-76]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="0" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="45" end="45" startBytecode="144" endBytecode="144" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="1" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="46" end="46" startBytecode="158" endBytecode="158" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 46]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="2" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="47" end="47" startBytecode="172" endBytecode="172" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 47]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="3" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="48" end="48" startBytecode="186" endBytecode="186" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 48]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="4" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="49" end="49" startBytecode="200" endBytecode="200" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 49]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="a50f9526ab748fc33252e3a275f98263" instanceOccurrenceNum="5" instanceOccurrenceMax="5">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.json.UserJSONImplTest" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="27" end="85" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
        <Message>At UserJSONImplTest.java:[lines 27-85]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.json.UserJSONImplTest</Message>
    </Class>
    <Method classname="twitter4j.internal.json.UserJSONImplTest" name="testGetDescriptionURLEntities1" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" start="30" end="53" startBytecode="0" endBytecode="406" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java"/>
      <Message>In method twitter4j.internal.json.UserJSONImplTest.testGetDescriptionURLEntities1()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.json.UserJSONImplTest" primary="true" start="50" end="50" startBytecode="218" endBytecode="218" sourcefile="UserJSONImplTest.java" sourcepath="twitter4j/internal/json/UserJSONImplTest.java" relSourcepath="twitter4j/internal/json/UserJSONImplTest.java">
      <Message>At UserJSONImplTest.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="5c55590f84f22f43a9343294f47a04e0" instanceOccurrenceNum="0" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.util.StringUtilTest.testSplit() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.util.StringUtilTest" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="25" end="50" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
        <Message>At StringUtilTest.java:[lines 25-50]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.util.StringUtilTest</Message>
    </Class>
    <Method classname="twitter4j.internal.util.StringUtilTest" name="testSplit" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="36" end="50" startBytecode="0" endBytecode="233" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java"/>
      <Message>In method twitter4j.internal.util.StringUtilTest.testSplit()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.util.StringUtilTest" primary="true" start="39" end="39" startBytecode="34" endBytecode="34" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
      <Message>At StringUtilTest.java:[line 39]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="5c55590f84f22f43a9343294f47a04e0" instanceOccurrenceNum="1" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.util.StringUtilTest.testSplit() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.util.StringUtilTest" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="25" end="50" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
        <Message>At StringUtilTest.java:[lines 25-50]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.util.StringUtilTest</Message>
    </Class>
    <Method classname="twitter4j.internal.util.StringUtilTest" name="testSplit" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="36" end="50" startBytecode="0" endBytecode="233" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java"/>
      <Message>In method twitter4j.internal.util.StringUtilTest.testSplit()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.util.StringUtilTest" primary="true" start="44" end="44" startBytecode="80" endBytecode="80" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
      <Message>At StringUtilTest.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="5c55590f84f22f43a9343294f47a04e0" instanceOccurrenceNum="2" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.internal.util.StringUtilTest.testSplit() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.internal.util.StringUtilTest" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="25" end="50" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
        <Message>At StringUtilTest.java:[lines 25-50]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.util.StringUtilTest</Message>
    </Class>
    <Method classname="twitter4j.internal.util.StringUtilTest" name="testSplit" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="36" end="50" startBytecode="0" endBytecode="233" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java"/>
      <Message>In method twitter4j.internal.util.StringUtilTest.testSplit()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.util.StringUtilTest" primary="true" start="45" end="45" startBytecode="89" endBytecode="89" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
      <Message>At StringUtilTest.java:[line 45]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SACM_STATIC_ARRAY_CREATED_IN_METHOD" priority="2" rank="18" abbrev="SACM" category="PERFORMANCE" instanceHash="a9cdc106f6f5cc1fb09803607ca6374" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method creates array using constants</ShortMessage>
    <LongMessage>Method twitter4j.internal.util.StringUtilTest.testSplit() creates array using constants</LongMessage>
    <Class classname="twitter4j.internal.util.StringUtilTest" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="25" end="50" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
        <Message>At StringUtilTest.java:[lines 25-50]</Message>
      </SourceLine>
      <Message>In class twitter4j.internal.util.StringUtilTest</Message>
    </Class>
    <Method classname="twitter4j.internal.util.StringUtilTest" name="testSplit" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.internal.util.StringUtilTest" start="36" end="50" startBytecode="0" endBytecode="233" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java"/>
      <Message>In method twitter4j.internal.util.StringUtilTest.testSplit()</Message>
    </Method>
    <SourceLine classname="twitter4j.internal.util.StringUtilTest" primary="true" start="41" end="41" startBytecode="60" endBytecode="60" sourcefile="StringUtilTest.java" sourcepath="twitter4j/internal/util/StringUtilTest.java" relSourcepath="twitter4j/internal/util/StringUtilTest.java">
      <Message>At StringUtilTest.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="e7862a0d2dd6582192c213d238c30b60" instanceOccurrenceNum="0" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="testAPIStatisticsOpenMBean" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="122" end="184" startBytecode="0" endBytecode="964" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean()</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="176" end="176" startBytecode="463" endBytecode="463" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 176]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="e7862a0d2dd6582192c213d238c30b60" instanceOccurrenceNum="1" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="testAPIStatisticsOpenMBean" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="122" end="184" startBytecode="0" endBytecode="964" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean()</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="177" end="177" startBytecode="479" endBytecode="479" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 177]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="CLI_CONSTANT_LIST_INDEX" priority="2" rank="7" abbrev="CLI" category="CORRECTNESS" instanceHash="e7862a0d2dd6582192c213d238c30b60" instanceOccurrenceNum="2" instanceOccurrenceMax="2">
    <ShortMessage>Method accesses list or array with constant index</ShortMessage>
    <LongMessage>Method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean() accesses list or array with constant index</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="testAPIStatisticsOpenMBean" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="122" end="184" startBytecode="0" endBytecode="964" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean()</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="178" end="178" startBytecode="495" endBytecode="495" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 178]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OCP_OVERLY_CONCRETE_PARAMETER" priority="2" rank="17" abbrev="OCP" category="STYLE" instanceHash="19d2384326f36361ce17ef3b5e4bfbda" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method needlessly defines parameter with concrete classes</ShortMessage>
    <LongMessage>1st parameter &apos;apiStats&apos; could be declared as twitter4j.management.APIStatisticsMBean instead</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="checkMethodStats" signature="(Ltwitter4j/management/APIStatistics;Ljava/lang/String;JJJJ)V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="196" end="213" startBytecode="0" endBytecode="302" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.checkMethodStats(APIStatistics, String, long, long, long, long)</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="196" end="196" startBytecode="0" endBytecode="0" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 196]</Message>
    </SourceLine>
    <String value="1st parameter &apos;apiStats&apos; could be declared as twitter4j.management.APIStatisticsMBean instead">
      <Message>Value 1st parameter &apos;apiStats&apos; could be declared as twitter4j.management.APIStatisticsMBean instead</Message>
    </String>
  </BugInstance>
  <BugInstance type="PSC_PRESIZE_COLLECTIONS" priority="2" rank="18" abbrev="PSC" category="PERFORMANCE" instanceHash="36f7e307c6335848ad5171b2201e6ddd" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method does not presize the allocation of a collection</ShortMessage>
    <LongMessage>Method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean() does not presize the allocation of a collection</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="testAPIStatisticsOpenMBean" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="122" end="184" startBytecode="0" endBytecode="964" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean()</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="133" end="133" startBytecode="97" endBytecode="97" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 133]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SACM_STATIC_ARRAY_CREATED_IN_METHOD" priority="2" rank="18" abbrev="SACM" category="PERFORMANCE" instanceHash="f3c68e1b08d1e4e4e713344ebb960443" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method creates array using constants</ShortMessage>
    <LongMessage>Method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean() creates array using constants</LongMessage>
    <Class classname="twitter4j.management.MBeansTest" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="36" end="224" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
        <Message>At MBeansTest.java:[lines 36-224]</Message>
      </SourceLine>
      <Message>In class twitter4j.management.MBeansTest</Message>
    </Class>
    <Method classname="twitter4j.management.MBeansTest" name="testAPIStatisticsOpenMBean" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.management.MBeansTest" start="122" end="184" startBytecode="0" endBytecode="964" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java"/>
      <Message>In method twitter4j.management.MBeansTest.testAPIStatisticsOpenMBean()</Message>
    </Method>
    <SourceLine classname="twitter4j.management.MBeansTest" primary="true" start="172" end="172" startBytecode="428" endBytecode="428" sourcefile="MBeansTest.java" sourcepath="twitter4j/management/MBeansTest.java" relSourcepath="twitter4j/management/MBeansTest.java">
      <Message>At MBeansTest.java:[line 172]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SLS_SUSPICIOUS_LOOP_SEARCH" priority="2" rank="7" abbrev="SLS" category="CORRECTNESS" instanceHash="2adb3bd2a7eabf6c5d726ae017c8e973" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>This method continues a loop after finding an equality condition</ShortMessage>
    <LongMessage>This method twitter4j.util.TimeSpanConverterTest.testSpanish() continues a loop after finding an equality condition</LongMessage>
    <Class classname="twitter4j.util.TimeSpanConverterTest" primary="true">
      <SourceLine classname="twitter4j.util.TimeSpanConverterTest" start="26" end="140" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java">
        <Message>At TimeSpanConverterTest.java:[lines 26-140]</Message>
      </SourceLine>
      <Message>In class twitter4j.util.TimeSpanConverterTest</Message>
    </Class>
    <Method classname="twitter4j.util.TimeSpanConverterTest" name="testSpanish" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.util.TimeSpanConverterTest" start="79" end="94" startBytecode="0" endBytecode="336" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java"/>
      <Message>In method twitter4j.util.TimeSpanConverterTest.testSpanish()</Message>
    </Method>
    <SourceLine classname="twitter4j.util.TimeSpanConverterTest" primary="true" start="83" end="83" startBytecode="43" endBytecode="43" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java">
      <Message>At TimeSpanConverterTest.java:[line 83]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="UPM_UNCALLED_PRIVATE_METHOD" priority="2" rank="18" abbrev="UPM" category="PERFORMANCE" instanceHash="17954ecd22f3c1e8f670749be33f7507" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Private method is never called</ShortMessage>
    <LongMessage>Private method twitter4j.util.TimeSpanConverterTest.getSpecificLocalDateInMillis(int, int) is never called</LongMessage>
    <Class classname="twitter4j.util.TimeSpanConverterTest" primary="true">
      <SourceLine classname="twitter4j.util.TimeSpanConverterTest" start="26" end="140" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java">
        <Message>At TimeSpanConverterTest.java:[lines 26-140]</Message>
      </SourceLine>
      <Message>In class twitter4j.util.TimeSpanConverterTest</Message>
    </Class>
    <Method classname="twitter4j.util.TimeSpanConverterTest" name="getSpecificLocalDateInMillis" signature="(II)J" isStatic="false" primary="true">
      <SourceLine classname="twitter4j.util.TimeSpanConverterTest" start="50" end="50" startBytecode="0" endBytecode="73" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java"/>
      <Message>In method twitter4j.util.TimeSpanConverterTest.getSpecificLocalDateInMillis(int, int)</Message>
    </Method>
    <SourceLine classname="twitter4j.util.TimeSpanConverterTest" start="50" end="50" startBytecode="0" endBytecode="73" sourcefile="TimeSpanConverterTest.java" sourcepath="twitter4j/util/TimeSpanConverterTest.java" relSourcepath="twitter4j/util/TimeSpanConverterTest.java" synthetic="true">
      <Message>At TimeSpanConverterTest.java:[line 50]</Message>
    </SourceLine>
  </BugInstance>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="CORRECTNESS">
    <Description>Correctness</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="SECURITY">
    <Description>Security</Description>
  </BugCategory>
  <BugCategory category="EXPERIMENTAL">
    <Description>Experimental</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugPattern type="DLS_DEAD_LOCAL_STORE" abbrev="DLS" category="STYLE">
    <ShortDescription>Dead store to local variable</ShortDescription>
    <Details><![CDATA[

<p>
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
</p>
<p>
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because SpotBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="PSC_PRESIZE_COLLECTIONS" abbrev="PSC" category="PERFORMANCE">
    <ShortDescription>Method does not presize the allocation of a collection</ShortDescription>
    <Details><![CDATA[
			
			<p>This method allocates a collection using the default constructor even though it is known
			a priori how many items are going to be placed in the collection (or at least can be reasonably guessed)
			and thus needlessly causes intermediate reallocations of the collection.</p>
			<p>You can use the constructor that takes an initial size and that will be much better, but
			due to the loadFactor of Maps and Sets, even this will not be a correct estimate.</p>
			<p>If you are using Guava, use its methods that allocate maps and sets with a predetermined size,
			to get the best chance for no reallocations, such as:
			<ul>
			    <li>Sets.newHashSetWithExpectedSize(int)</li>
			    <li>Maps.newHashMapWithExpectedSize(int)</li>
			</ul>
			If not, a good estimate would be the expectedSize / {LOADING_FACTOR} which by default is 0.75
			</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" abbrev="RV" category="STYLE">
    <ShortDescription>Return value of method without side effect is ignored</ShortDescription>
    <Details><![CDATA[

<p>This code calls a method and ignores the return value. However our analysis shows that
the method (including its implementations in subclasses if any) does not produce any effect
other than return value. Thus this call can be removed.
</p>
<p>We are trying to reduce the false positives as much as possible, but in some cases this warning might be wrong.
Common false-positive cases include:</p>
<p>- The method is designed to be overridden and produce a side effect in other projects which are out of the scope of the analysis.</p>
<p>- The method is called to trigger the class loading which may have a side effect.</p>
<p>- The method is called just to get some exception.</p>
<p>If you feel that our assumption is incorrect, you can use a @CheckReturnValue annotation
to instruct SpotBugs that ignoring the return value of this method is acceptable.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SLS_SUSPICIOUS_LOOP_SEARCH" abbrev="SLS" category="CORRECTNESS">
    <ShortDescription>This method continues a loop after finding an equality condition</ShortDescription>
    <Details><![CDATA[
    		
    		<p>This method continues with a loop, and does not break out of it, after finding and setting a variable in an if
    		condition based on equality. Since continuing on in the loop would seem to be unlikely to find the item again, breaking
    		at this point would seem to be the proper action.</p>
    		<p>Example:
<pre><code>
int age = 0;
for (Person p : people) {
    if (p.getName().equals("Dave")) {
        age = p.getAge();
    }
}
</code></pre>
    		It is likely you wanted a break after getting the age for "Dave".</p>
    		
    	]]></Details>
  </BugPattern>
  <BugPattern type="CLI_CONSTANT_LIST_INDEX" abbrev="CLI" category="CORRECTNESS">
    <ShortDescription>Method accesses list or array with constant index</ShortDescription>
    <Details><![CDATA[
			
			<p>This method accesses an array or list using a constant integer index. Often,
			this is a typo where a loop variable is intended to be used. If however, specific
			list indices mean different specific things, then perhaps replacing the list with
			a first-class object with meaningful accessors would make the code less brittle.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="SIC_INNER_SHOULD_BE_STATIC" abbrev="SIC" category="PERFORMANCE">
    <ShortDescription>Should be a static inner class</ShortDescription>
    <Details><![CDATA[

  <p> This class is an inner class, but does not use its embedded reference
  to the object which created it.&nbsp; This reference makes the instances
  of the class larger, and may keep the reference to the creator object
  alive longer than necessary.&nbsp; If possible, the class should be
   made static.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="IJU_TEARDOWN_NO_SUPER" abbrev="IJU" category="CORRECTNESS">
    <ShortDescription>TestCase defines tearDown that doesn&apos;t call super.tearDown()</ShortDescription>
    <Details><![CDATA[

<p> Class is a JUnit TestCase and implements the tearDown method. The tearDown method should call
super.tearDown(), but doesn't.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MDM_STRING_BYTES_ENCODING" abbrev="MDM" category="CORRECTNESS">
    <ShortDescription>Method encodes String bytes without specifying the character encoding</ShortDescription>
    <Details><![CDATA[
			
			<p>The behavior of the <code>String(byte[] bytes)</code> and <code>String.getBytes()</code> is undefined if the string cannot be encoded in the platform's default charset. Instead, use the <code>String(byte[] bytes, String encoding)</code> or <code>String.getBytes(String encoding)</code> constructor which accepts the string's encoding as an argument. Be sure to specify the encoding used for the user's locale.</p>

			<p>As per the Java specifications, "UTF-8", "US-ASCII", "UTF-16" and "ISO-8859-1" will all be valid <a href = "http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#standard">encoding charsets</a>.  If you aren't sure, try "UTF-8".</p>

			<p><b>New in Java 1.7</b>, you can specify an encoding from <code>StandardCharsets</code>, like <code>StandardCharsets.UTF_8</code>.  These are generally preferrable because you don't have to deal with <code>UnsupportedEncodingException</code>.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          For sending feedback, check:
          </p>
          <ul>
            <li><a href="https://github.com/spotbugs/spotbugs/blob/master/CONTRIBUTING.md">contributing guideline</a></li>
            <li><a href="https://github.com/spotbugs/discuss/issues?q=">malinglist</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>, for
          a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="NPMC_NON_PRODUCTIVE_METHOD_CALL" abbrev="NPMC" category="CORRECTNESS">
    <ShortDescription>Method ignores return value of a non mutating method</ShortDescription>
    <Details><![CDATA[
			
			<p>This method ignores the return value of a common method that is assumed to be non-mutating.
			If this method does in fact not modify the object it is called on, there is no reason to call
			this method, and it can be removed.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="BED_BOGUS_EXCEPTION_DECLARATION" abbrev="BED" category="CORRECTNESS">
    <ShortDescription>Non derivable method declares throwing an exception that isn&apos;t thrown</ShortDescription>
    <Details><![CDATA[
			
			<p>This method declares that it throws a checked exception that it does not throw. As this method is
			either a constructor, static method or private method, there is no reason for this method to declare
			the exception in its throws clause, and just causes calling methods to unnecessarily handle an exception
			that will never be thrown. The exception in question should be removed from the throws clause.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="OCP_OVERLY_CONCRETE_PARAMETER" abbrev="OCP" category="STYLE">
    <ShortDescription>Method needlessly defines parameter with concrete classes</ShortDescription>
    <Details><![CDATA[
			
			<p>This method uses concrete classes for parameters when only methods defined in an implemented
			interface or superclass are used. Consider increasing the abstraction of the interface to
			make low impact changes easier to accomplish in the future.</p>

			<p>Take the following example:<br/>
<pre><code>
private void appendToList(ArrayList&lt;String&gt; list) {
    if (list.size() &lt; 100) {
        list.add("Foo");
    }
}
</code></pre>

				The parameter list is currently defined as an <code>ArrayList</code>, which is a concrete implementation of the <code>List</code> interface.  
				Specifying <code>ArrayList</code> is unnecessary here, because we aren't using any <code>ArrayList</code>-specific methods (like <code>ensureCapacity()</code> or <code>trimToSize()</code>).
				Instead of using the concrete definition, it is better to do something like:<br/>
<pre><code>
private void appendToList(List&lt;String&gt; list) {
    ...
</code></pre>
				If the design ever changes, e.g. a <code>LinkedList</code> is used instead, this code won't have to change.

			</p>

			<p>IDEs tend to have tools to help generalize parameters.  For example, in Eclipse, the refactoring tool <a href="http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-menu-refactor.htm">Generalize Declared Type</a> helps find an appropriate level of concreteness.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="CC_CYCLOMATIC_COMPLEXITY" abbrev="CC" category="STYLE">
    <ShortDescription>Method is excessively complex</ShortDescription>
    <Details><![CDATA[
			
			<p>This method has a high cyclomatic complexity figure, which calculates the number of branch
			points. It is likely difficult to test, and is brittle to change. Consider refactoring this
			method into several to reduce the risk.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="PATH_TRAVERSAL_IN" abbrev="SECPTI" category="SECURITY" cweid="22">
    <ShortDescription>Potential Path Traversal (file read)</ShortDescription>
    <Details><![CDATA[
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter. 
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="http://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="http://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="COM_COPIED_OVERRIDDEN_METHOD" abbrev="COM" category="STYLE">
    <ShortDescription>Method is implemented with an exact copy of its superclass&apos;s method</ShortDescription>
    <Details><![CDATA[
			
			<p>This method is implemented using an exact copy of its superclass method's
			implementation, which usually means that this method can just be removed.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="DM_DEFAULT_ENCODING" abbrev="Dm" category="I18N">
    <ShortDescription>Reliance on default encoding</ShortDescription>
    <Details><![CDATA[

<p> Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. This will cause the application behaviour to vary between platforms. Use an alternative API and specify a charset name or Charset object explicitly.  </p>

      ]]></Details>
  </BugPattern>
  <BugPattern type="NAB_NEEDLESS_BOXING_PARSE" abbrev="NAB" category="PERFORMANCE">
    <ShortDescription>Method converts String to primitive using excessive boxing</ShortDescription>
    <Details><![CDATA[
			
			<p>This method passes a String to a wrapped primitive object's valueOf method, which in turn calls
			the boxedValue() method to convert to a primitive. When it is desired to convert from a String
			to a primitive value, it is simpler to use the BoxedPrimitive.parseBoxedPrimitive(String)
			method. </p>
			
			<p>Instead of something like:<br/>
<pre><code>
public int someMethod(String data) {
long l = Long.valueOf(data).longValue();
float f = Float.valueOf(data).floatValue();
return Integer.valueOf(data); // There is an implicit .intValue() call
}
</code></pre>
			Simply do: <br/>
<pre><code>
public int someMethod(String data) {
	long l = Long.parseLong(data);
	float f = Float.parseFloat(data);
	return Integer.parseInt(data);
}
</code></pre>
			</p>
			
			
		]]></Details>
  </BugPattern>
  <BugPattern type="SACM_STATIC_ARRAY_CREATED_IN_METHOD" abbrev="SACM" category="PERFORMANCE">
    <ShortDescription>Method creates array using constants</ShortDescription>
    <Details><![CDATA[
			
			<p>This method creates an array initialized by constants. Each time this method is called
			this array will be recreated. It would be more performant to define the array as a
			static field of the class instead.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource on checked exception</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          For sending feedback, check:
          </p>
          <ul>
            <li><a href="https://github.com/spotbugs/spotbugs/blob/master/CONTRIBUTING.md">contributing guideline</a></li>
            <li><a href="https://github.com/spotbugs/discuss/issues?q=">malinglist</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>, for
          a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" abbrev="UrF" category="STYLE">
    <ShortDescription>Unread public/protected field</ShortDescription>
    <Details><![CDATA[

  <p> This field is never read.&nbsp;
The field is public or protected, so perhaps
    it is intended to be used with classes not seen as part of the analysis. If not,
consider removing it from the class.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="OBJECT_DESERIALIZATION" abbrev="SECOBDES" category="SECURITY" cweid="502">
    <ShortDescription>Object deserialization is used in {1}</ShortDescription>
    <Details><![CDATA[
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="http://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class java.util.HashSet</a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="UPM_UNCALLED_PRIVATE_METHOD" abbrev="UPM" category="PERFORMANCE">
    <ShortDescription>Private method is never called</ShortDescription>
    <Details><![CDATA[

<p> This private method is never called. Although it is
possible that the method will be invoked through reflection,
it is more likely that the method is never used, and should be
removed.
</p>

]]></Details>
  </BugPattern>
  <BugPattern type="HARD_CODE_PASSWORD" abbrev="SECHCP" category="SECURITY" cweid="259">
    <ShortDescription>Hard Coded Password</ShortDescription>
    <Details><![CDATA[
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS" abbrev="PRMC" category="PERFORMANCE">
    <ShortDescription>Method appears to call the same method on the same object redundantly</ShortDescription>
    <Details><![CDATA[
			
			<p>This method makes two consecutive calls to the same method using the same constant
			parameters, on the same instance without any intervening changes to the objects. If this
			method does not make changes to the object, which it appears it doesn't, then making
			two calls is just a waste. These method calls could be combined by assigning the
			result into a temporary variable, and using the variable the second time.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="XXE_DOCUMENT" abbrev="SECXXEDOC" category="SECURITY" cweid="611">
    <ShortDescription>XML parsing vulnerable to XXE (DocumentBuilder)</ShortDescription>
    <Details><![CDATA[
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML e<u>X</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ml <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="http://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="http://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="http://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="http://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="http://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html">Identifying Xml eXternal Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        ]]></Details>
  </BugPattern>
  <BugPattern type="LSC_LITERAL_STRING_COMPARISON" abbrev="LSC" category="STYLE">
    <ShortDescription>Method makes literal string comparisons passing the literal as an argument</ShortDescription>
    <Details><![CDATA[
			
			<p>This line is in the form of <br/>
<pre><code>String str = ...
str.equals("someOtherString");
//or
str.compareTo("someOtherString");</code></pre>
		    </p>
			<p>A <code>NullPointerException</code> may occur if the String variable <code>str</code> is <code>null</code>. If instead the code was restructured to<br/>
<pre><code>String str = ...
"someOtherString".equals(str);
//or
"someOtherString".compareTo(str);</code></pre><br/>
			that is, call <code>equals()</code> or <code>compareTo()</code> on the string literal, passing the 
			variable as an argument, this exception could never happen as both <code>equals()</code> and 
			<code>compareTo()</code> check for <code>null</code>.</p>
			
		]]></Details>
  </BugPattern>
  <BugPattern type="DM_BOXED_PRIMITIVE_FOR_PARSING" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Boxing/unboxing to parse a primitive</ShortDescription>
    <Details><![CDATA[

  <p>A boxed primitive is created from a String, just to extract the unboxed primitive value.
  It is more efficient to just call the static parseXXX method.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SPP_TOSTRING_ON_STRING" abbrev="SPP" category="CORRECTNESS">
    <ShortDescription>Method calls toString() on a String</ShortDescription>
    <Details><![CDATA[
	       
	       <p>This method calls toString on a String. Just use the object itself if you want a String.</p>
	       
	   ]]></Details>
  </BugPattern>
  <BugPattern type="SSCU_SUSPICIOUS_SHADED_CLASS_USE" abbrev="SSCU" category="CORRECTNESS">
    <ShortDescription>Method calls a method from a class that has been shaded by a 3rdparty jar</ShortDescription>
    <Details><![CDATA[
    		
    		<p>This method calls a method found in a 3rdparty library, which appears to be shaded from another 3rdparty library.
    		This occurs when a jar includes other code using tools like the maven shade plugin. It is likely you wanted to use the
    		"first-class" class from the original jar, rather than the class with the shaded package structure, but your IDE pulled in
    		the wrong import.</p>
    		<p>An example might be, you attempted to use a method from the class:
    		<pre><code>
    		com.google.common.collect.Sets
    		</code></pre>
    		But instead, you import:
    		<pre><code>
    		org.apache.jena.ext.com.google.common.collect.Sets
    		</code></pre>
    		</p>
    		
    	]]></Details>
  </BugPattern>
  <BugPattern type="OS_OPEN_STREAM" abbrev="OS" category="BAD_PRACTICE">
    <ShortDescription>Method may fail to close stream</ShortDescription>
    <Details><![CDATA[

<p> The method creates an IO stream object, does not assign it to any
fields, pass it to other methods that might close it,
or return it, and does not appear to close
the stream on all paths out of the method.&nbsp; This may result in
a file descriptor leak.&nbsp; It is generally a good
idea to use a <code>finally</code> block to ensure that streams are
closed.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" abbrev="RV" category="BAD_PRACTICE" cweid="253">
    <ShortDescription>Method ignores exceptional return value</ShortDescription>
    <Details><![CDATA[

   <p> This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the <code>File.delete()</code> method returns false
if the file could not be successfully deleted (rather than
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
</p>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="CLI">
    <Description>Constant List Index</Description>
  </BugCode>
  <BugCode abbrev="RV" cweid="440">
    <Description>Bad use of return value from method</Description>
  </BugCode>
  <BugCode abbrev="DLS" cweid="563">
    <Description>Dead local store</Description>
  </BugCode>
  <BugCode abbrev="SPP">
    <Description>Sillyness Pot Pourri</Description>
  </BugCode>
  <BugCode abbrev="UPM">
    <Description>Private method is never called</Description>
  </BugCode>
  <BugCode abbrev="IJU">
    <Description>Improperly implemented JUnit TestCase</Description>
  </BugCode>
  <BugCode abbrev="MDM">
    <Description>More Dumb Methods</Description>
  </BugCode>
  <BugCode abbrev="OBL">
    <Description>Unsatisfied obligation to clean up stream or resource</Description>
  </BugCode>
  <BugCode abbrev="SLS">
    <Description>Suspicious Loop Search</Description>
  </BugCode>
  <BugCode abbrev="LSC">
    <Description>Literal String Comparison</Description>
  </BugCode>
  <BugCode abbrev="SACM">
    <Description>Static Array Created in Method</Description>
  </BugCode>
  <BugCode abbrev="BED">
    <Description>Bogus Exception Declaration</Description>
  </BugCode>
  <BugCode abbrev="CC">
    <Description>Cyclomatic Complexity</Description>
  </BugCode>
  <BugCode abbrev="COM">
    <Description>Copied Overridden Method</Description>
  </BugCode>
  <BugCode abbrev="SECXXEDOC">
    <Description>XXE Vulnerability using DocumentBuilder</Description>
  </BugCode>
  <BugCode abbrev="PSC">
    <Description>Presize Collection</Description>
  </BugCode>
  <BugCode abbrev="OS">
    <Description>Stream not closed on all paths</Description>
  </BugCode>
  <BugCode abbrev="UrF">
    <Description>Unread field</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="SECHCP">
    <Description>Hard Coded Password</Description>
  </BugCode>
  <BugCode abbrev="SIC">
    <Description>Inner class could be made static</Description>
  </BugCode>
  <BugCode abbrev="NAB">
    <Description>Needless Autoboxing</Description>
  </BugCode>
  <BugCode abbrev="SECOBDES">
    <Description>Object deserialization is used</Description>
  </BugCode>
  <BugCode abbrev="SSCU">
    <Description>Suspicious Shaded Class Use</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="SECPTI">
    <Description>Potential Path Traversal (file read)</Description>
  </BugCode>
  <BugCode abbrev="NPMC">
    <Description>Non Productive Method Call</Description>
  </BugCode>
  <BugCode abbrev="PRMC">
    <Description>Possibly Redundant Method Calls</Description>
  </BugCode>
  <BugCode abbrev="OCP">
    <Description>Overly Concrete Parameters</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Mon, 18 Dec 2017 11:47:04 -0600" total_classes="45" referenced_classes="219" total_bugs="100" total_size="2722" num_packages="10" java_version="1.8.0_151" vm_version="25.151-b12" cpu_seconds="39.36" clock_seconds="19.86" peak_mbytes="400.30" alloc_mbytes="910.50" gc_seconds="0.79" priority_2="89" priority_1="11">
    <FileStats path="twitter4j/AuthorizationTest.java" bugCount="1" size="27" bugHash="ddaec8e05f648abd27aead76fc4a8b01"/>
    <FileStats path="twitter4j/DirectMessagesResourcesTest.java" bugCount="0" size="50"/>
    <FileStats path="twitter4j/FavoritesResourcesTest.java" bugCount="0" size="31"/>
    <FileStats path="twitter4j/FriendsFollowersResourcesTest.java" bugCount="0" size="178"/>
    <FileStats path="twitter4j/HelpResoursesTest.java" bugCount="0" size="30"/>
    <FileStats path="twitter4j/ListResourcesTest.java" bugCount="2" size="231" bugHash="3be4a70e265048910ce4126a51e7c272"/>
    <FileStats path="twitter4j/MBeanServerRunner.java" bugCount="0" size="18"/>
    <FileStats path="twitter4j/MBeansIntegrationTest.java" bugCount="0" size="13"/>
    <FileStats path="twitter4j/PagingTest.java" bugCount="3" size="83" bugHash="12bc8aecae1150bf8f2536c416093fca"/>
    <FileStats path="twitter4j/PlaceGeoResourcesTest.java" bugCount="0" size="52"/>
    <FileStats path="twitter4j/SSLTestUnit.java" bugCount="0" size="8"/>
    <FileStats path="twitter4j/SavedSearchesResourcesTest.java" bugCount="0" size="31"/>
    <FileStats path="twitter4j/SearchAPITest.java" bugCount="1" size="82" bugHash="bc9182096b3f22f857a709e47a3b5dee"/>
    <FileStats path="twitter4j/SizeofStatusChecker.java" bugCount="4" size="16" bugHash="7a245e348f9e44c83a854ea005e36ce7"/>
    <FileStats path="twitter4j/SpamReportingResourceTest.java" bugCount="0" size="12"/>
    <FileStats path="twitter4j/SuggestedUsersResourcesTest.java" bugCount="0" size="29"/>
    <FileStats path="twitter4j/TimelineResourcesTest.java" bugCount="0" size="85"/>
    <FileStats path="twitter4j/TrendsResourcesTest.java" bugCount="0" size="20"/>
    <FileStats path="twitter4j/TweetsResourcesTest.java" bugCount="6" size="148" bugHash="201e6caf3c22d34c1a9920f98a6f4278"/>
    <FileStats path="twitter4j/Twitter4JTestSuite.java" bugCount="0" size="18"/>
    <FileStats path="twitter4j/TwitterExceptionTest.java" bugCount="5" size="35" bugHash="56fc88d5b273fdb40765581b0f791539"/>
    <FileStats path="twitter4j/TwitterTest.java" bugCount="1" size="83" bugHash="287a55c4e2101e5ccc0089f8dd06dd6e"/>
    <FileStats path="twitter4j/TwitterTestBase.java" bugCount="7" size="78" bugHash="c6bab92fe42deb51641961ed98f95f5c"/>
    <FileStats path="twitter4j/UndocumentedResourcesTest.java" bugCount="0" size="23"/>
    <FileStats path="twitter4j/UsersResourcesTest.java" bugCount="6" size="216" bugHash="2f4e8d9ea8f683462a6f3eaef9f1c3e4"/>
    <FileStats path="twitter4j/auth/OAuthTest.java" bugCount="9" size="249" bugHash="bb62cca5f300490633817d04ed75624c"/>
    <FileStats path="twitter4j/conf/ConfigurationTest.java" bugCount="17" size="277" bugHash="d0b425bc5c601ab98fd5f9fefafd7887"/>
    <FileStats path="twitter4j/http/BASE64EncoderTest.java" bugCount="7" size="12" bugHash="160b50c6a986f52e0fad9290e1114883"/>
    <FileStats path="twitter4j/http/HttpClientTest.java" bugCount="1" size="13" bugHash="ee4892087ab7431133e926c1de174d38"/>
    <FileStats path="twitter4j/http/PostParameterTest.java" bugCount="0" size="41"/>
    <FileStats path="twitter4j/internal/KryoSerializationTest.java" bugCount="0" size="28"/>
    <FileStats path="twitter4j/internal/async/DispatcherTest.java" bugCount="0" size="51"/>
    <FileStats path="twitter4j/internal/json/HTMLEntityTest.java" bugCount="2" size="75" bugHash="a6af6555e37e64b511a84685514c2fdd"/>
    <FileStats path="twitter4j/internal/json/RateLimitStatusJSONImplTest.java" bugCount="4" size="32" bugHash="0c2fac8977ee8a99e873cf3a907cf40e"/>
    <FileStats path="twitter4j/internal/json/UserJSONImplTest.java" bugCount="6" size="50" bugHash="23376b7ab2312fa079b1a7c9bf608396"/>
    <FileStats path="twitter4j/internal/util/ParseUtilTest.java" bugCount="0" size="20"/>
    <FileStats path="twitter4j/internal/util/StringUtilTest.java" bugCount="4" size="24" bugHash="89a3100963dbe396d0c2a048851b88fb"/>
    <FileStats path="twitter4j/management/MBeansTest.java" bugCount="6" size="122" bugHash="0a1fb05193021cf2c82535d8f6c755b2"/>
    <FileStats path="twitter4j/util/CharacterUtilTest.java" bugCount="0" size="35"/>
    <FileStats path="twitter4j/util/TimeSpanConverterTest.java" bugCount="2" size="96" bugHash="ee537cd8f636e828781c4dbcbd486616"/>
    <PackageStats package="twitter4j" total_bugs="38" total_types="28" total_size="1597" priority_2="33" priority_1="5">
      <ClassStats class="twitter4j.AuthorizationTest" sourceFile="AuthorizationTest.java" interface="false" size="27" bugs="1" priority_2="1"/>
      <ClassStats class="twitter4j.DirectMessagesResourcesTest" sourceFile="DirectMessagesResourcesTest.java" interface="false" size="50" bugs="0"/>
      <ClassStats class="twitter4j.FavoritesResourcesTest" sourceFile="FavoritesResourcesTest.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="twitter4j.FriendsFollowersResourcesTest" sourceFile="FriendsFollowersResourcesTest.java" interface="false" size="178" bugs="0"/>
      <ClassStats class="twitter4j.HelpResoursesTest" sourceFile="HelpResoursesTest.java" interface="false" size="30" bugs="0"/>
      <ClassStats class="twitter4j.ListResourcesTest" sourceFile="ListResourcesTest.java" interface="false" size="231" bugs="2" priority_2="2"/>
      <ClassStats class="twitter4j.MBeanServerRunner" sourceFile="MBeanServerRunner.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="twitter4j.MBeansIntegrationTest" sourceFile="MBeansIntegrationTest.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="twitter4j.PagingTest" sourceFile="PagingTest.java" interface="false" size="83" bugs="3" priority_2="3"/>
      <ClassStats class="twitter4j.PlaceGeoResourcesTest" sourceFile="PlaceGeoResourcesTest.java" interface="false" size="52" bugs="0"/>
      <ClassStats class="twitter4j.SSLTestUnit" sourceFile="SSLTestUnit.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="twitter4j.SavedSearchesResourcesTest" sourceFile="SavedSearchesResourcesTest.java" interface="false" size="31" bugs="0"/>
      <ClassStats class="twitter4j.SearchAPITest" sourceFile="SearchAPITest.java" interface="false" size="82" bugs="1" priority_2="1"/>
      <ClassStats class="twitter4j.SizeofStatusChecker" sourceFile="SizeofStatusChecker.java" interface="false" size="16" bugs="4" priority_2="2" priority_1="2"/>
      <ClassStats class="twitter4j.SpamReportingResourceTest" sourceFile="SpamReportingResourceTest.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="twitter4j.SuggestedUsersResourcesTest" sourceFile="SuggestedUsersResourcesTest.java" interface="false" size="29" bugs="0"/>
      <ClassStats class="twitter4j.TimelineResourcesTest" sourceFile="TimelineResourcesTest.java" interface="false" size="85" bugs="0"/>
      <ClassStats class="twitter4j.TrendsResourcesTest" sourceFile="TrendsResourcesTest.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="twitter4j.TweetsResourcesTest" sourceFile="TweetsResourcesTest.java" interface="false" size="148" bugs="8" priority_2="8"/>
      <ClassStats class="twitter4j.Twitter4JTestSuite" sourceFile="Twitter4JTestSuite.java" interface="false" size="18" bugs="0"/>
      <ClassStats class="twitter4j.TwitterExceptionTest" sourceFile="TwitterExceptionTest.java" interface="false" size="35" bugs="5" priority_2="5"/>
      <ClassStats class="twitter4j.TwitterTest" sourceFile="TwitterTest.java" interface="false" size="60" bugs="1" priority_1="1"/>
      <ClassStats class="twitter4j.TwitterTest$1" sourceFile="TwitterTest.java" interface="false" size="12" bugs="0"/>
      <ClassStats class="twitter4j.TwitterTest$2" sourceFile="TwitterTest.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="twitter4j.TwitterTestBase" sourceFile="TwitterTestBase.java" interface="false" size="63" bugs="3" priority_2="2" priority_1="1"/>
      <ClassStats class="twitter4j.TwitterTestBase$TestUserInfo" sourceFile="TwitterTestBase.java" interface="false" size="15" bugs="4" priority_2="3" priority_1="1"/>
      <ClassStats class="twitter4j.UndocumentedResourcesTest" sourceFile="UndocumentedResourcesTest.java" interface="false" size="23" bugs="0"/>
      <ClassStats class="twitter4j.UsersResourcesTest" sourceFile="UsersResourcesTest.java" interface="false" size="216" bugs="6" priority_2="6"/>
    </PackageStats>
    <PackageStats package="twitter4j.auth" total_bugs="9" total_types="1" total_size="249" priority_2="9">
      <ClassStats class="twitter4j.auth.OAuthTest" sourceFile="OAuthTest.java" interface="false" size="249" bugs="9" priority_2="9"/>
    </PackageStats>
    <PackageStats package="twitter4j.conf" total_bugs="17" total_types="1" total_size="277" priority_2="15" priority_1="2">
      <ClassStats class="twitter4j.conf.ConfigurationTest" sourceFile="ConfigurationTest.java" interface="false" size="277" bugs="17" priority_2="15" priority_1="2"/>
    </PackageStats>
    <PackageStats package="twitter4j.http" total_bugs="8" total_types="3" total_size="66" priority_2="7" priority_1="1">
      <ClassStats class="twitter4j.http.BASE64EncoderTest" sourceFile="BASE64EncoderTest.java" interface="false" size="12" bugs="7" priority_2="6" priority_1="1"/>
      <ClassStats class="twitter4j.http.HttpClientTest" sourceFile="HttpClientTest.java" interface="false" size="13" bugs="1" priority_2="1"/>
      <ClassStats class="twitter4j.http.PostParameterTest" sourceFile="PostParameterTest.java" interface="false" size="41" bugs="0"/>
    </PackageStats>
    <PackageStats package="twitter4j.internal" total_bugs="0" total_types="1" total_size="28">
      <ClassStats class="twitter4j.internal.KryoSerializationTest" sourceFile="KryoSerializationTest.java" interface="false" size="28" bugs="0"/>
    </PackageStats>
    <PackageStats package="twitter4j.internal.async" total_bugs="0" total_types="2" total_size="51">
      <ClassStats class="twitter4j.internal.async.DispatcherTest" sourceFile="DispatcherTest.java" interface="false" size="43" bugs="0"/>
      <ClassStats class="twitter4j.internal.async.DispatcherTest$IncrementTask" sourceFile="DispatcherTest.java" interface="false" size="8" bugs="0"/>
    </PackageStats>
    <PackageStats package="twitter4j.internal.json" total_bugs="13" total_types="4" total_size="157" priority_2="10" priority_1="3">
      <ClassStats class="twitter4j.internal.json.HTMLEntityTest" sourceFile="HTMLEntityTest.java" interface="false" size="75" bugs="2" priority_2="2"/>
      <ClassStats class="twitter4j.internal.json.RateLimitStatusJSONImplTest" sourceFile="RateLimitStatusJSONImplTest.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="twitter4j.internal.json.RateLimitStatusJSONImplTest$MockHttpResponse" sourceFile="RateLimitStatusJSONImplTest.java" interface="false" size="18" bugs="4" priority_2="1" priority_1="3"/>
      <ClassStats class="twitter4j.internal.json.UserJSONImplTest" sourceFile="UserJSONImplTest.java" interface="false" size="50" bugs="7" priority_2="7"/>
    </PackageStats>
    <PackageStats package="twitter4j.internal.util" total_bugs="7" total_types="2" total_size="44" priority_2="7">
      <ClassStats class="twitter4j.internal.util.ParseUtilTest" sourceFile="ParseUtilTest.java" interface="false" size="20" bugs="0"/>
      <ClassStats class="twitter4j.internal.util.StringUtilTest" sourceFile="StringUtilTest.java" interface="false" size="24" bugs="7" priority_2="7"/>
    </PackageStats>
    <PackageStats package="twitter4j.management" total_bugs="6" total_types="1" total_size="122" priority_2="6">
      <ClassStats class="twitter4j.management.MBeansTest" sourceFile="MBeansTest.java" interface="false" size="122" bugs="6" priority_2="6"/>
    </PackageStats>
    <PackageStats package="twitter4j.util" total_bugs="2" total_types="2" total_size="131" priority_2="2">
      <ClassStats class="twitter4j.util.CharacterUtilTest" sourceFile="CharacterUtilTest.java" interface="false" size="35" bugs="0"/>
      <ClassStats class="twitter4j.util.TimeSpanConverterTest" sourceFile="TimeSpanConverterTest.java" interface="false" size="96" bugs="2" priority_2="2"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="910" invocations="923" avgMicrosecondsPerInvocation="986" maxMicrosecondsPerInvocation="96870" standardDeviationMicrosecondsPerInvocation="4245"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="710" invocations="250" avgMicrosecondsPerInvocation="2842" maxMicrosecondsPerInvocation="67811" standardDeviationMicrosecondsPerInvocation="7489"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="699" invocations="238" avgMicrosecondsPerInvocation="2940" maxMicrosecondsPerInvocation="366080" standardDeviationMicrosecondsPerInvocation="23886"/>
      <ClassProfile name="com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine" totalMilliseconds="601" invocations="250" avgMicrosecondsPerInvocation="2407" maxMicrosecondsPerInvocation="61439" standardDeviationMicrosecondsPerInvocation="5541"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="600" invocations="250" avgMicrosecondsPerInvocation="2402" maxMicrosecondsPerInvocation="20286" standardDeviationMicrosecondsPerInvocation="4235"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.collect.CollectStatistics" totalMilliseconds="465" invocations="219" avgMicrosecondsPerInvocation="2125" maxMicrosecondsPerInvocation="40680" standardDeviationMicrosecondsPerInvocation="4840"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="457" invocations="219" avgMicrosecondsPerInvocation="2088" maxMicrosecondsPerInvocation="33635" standardDeviationMicrosecondsPerInvocation="3801"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="456" invocations="268" avgMicrosecondsPerInvocation="1702" maxMicrosecondsPerInvocation="20464" standardDeviationMicrosecondsPerInvocation="3199"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="452" invocations="219" avgMicrosecondsPerInvocation="2066" maxMicrosecondsPerInvocation="37417" standardDeviationMicrosecondsPerInvocation="4262"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="445" invocations="250" avgMicrosecondsPerInvocation="1783" maxMicrosecondsPerInvocation="17726" standardDeviationMicrosecondsPerInvocation="3250"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="424" invocations="271" avgMicrosecondsPerInvocation="1564" maxMicrosecondsPerInvocation="21365" standardDeviationMicrosecondsPerInvocation="3246"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="388" invocations="530" avgMicrosecondsPerInvocation="732" maxMicrosecondsPerInvocation="19829" standardDeviationMicrosecondsPerInvocation="1878"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="316" invocations="250" avgMicrosecondsPerInvocation="1265" maxMicrosecondsPerInvocation="19669" standardDeviationMicrosecondsPerInvocation="2764"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="265" invocations="953" avgMicrosecondsPerInvocation="278" maxMicrosecondsPerInvocation="8526" standardDeviationMicrosecondsPerInvocation="585"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="184" invocations="466" avgMicrosecondsPerInvocation="395" maxMicrosecondsPerInvocation="25733" standardDeviationMicrosecondsPerInvocation="1528"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="182" invocations="219" avgMicrosecondsPerInvocation="835" maxMicrosecondsPerInvocation="17843" standardDeviationMicrosecondsPerInvocation="2239"/>
      <ClassProfile name="com.h3xstream.findsecbugs.scala.SSRFDetector" totalMilliseconds="178" invocations="45" avgMicrosecondsPerInvocation="3958" maxMicrosecondsPerInvocation="91663" standardDeviationMicrosecondsPerInvocation="13457"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildStringPassthruGraph" totalMilliseconds="156" invocations="219" avgMicrosecondsPerInvocation="713" maxMicrosecondsPerInvocation="55628" standardDeviationMicrosecondsPerInvocation="3902"/>
      <ClassProfile name="com.h3xstream.findsecbugs.xml.StdXmlTransformDetector" totalMilliseconds="146" invocations="45" avgMicrosecondsPerInvocation="3260" maxMicrosecondsPerInvocation="71754" standardDeviationMicrosecondsPerInvocation="10587"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures" totalMilliseconds="146" invocations="219" avgMicrosecondsPerInvocation="667" maxMicrosecondsPerInvocation="54204" standardDeviationMicrosecondsPerInvocation="3932"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="144" invocations="875" avgMicrosecondsPerInvocation="164" maxMicrosecondsPerInvocation="9275" standardDeviationMicrosecondsPerInvocation="627"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.obl.ObligationAnalysis" totalMilliseconds="138" invocations="61" avgMicrosecondsPerInvocation="2275" maxMicrosecondsPerInvocation="17703" standardDeviationMicrosecondsPerInvocation="4458"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="136" invocations="250" avgMicrosecondsPerInvocation="547" maxMicrosecondsPerInvocation="57285" standardDeviationMicrosecondsPerInvocation="3715"/>
      <ClassProfile name="edu.umd.cs.findbugs.DetectorToDetector2Adapter" totalMilliseconds="135" invocations="16092" avgMicrosecondsPerInvocation="8" maxMicrosecondsPerInvocation="20468" standardDeviationMicrosecondsPerInvocation="191"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CalledMethods" totalMilliseconds="135" invocations="219" avgMicrosecondsPerInvocation="617" maxMicrosecondsPerInvocation="19351" standardDeviationMicrosecondsPerInvocation="1971"/>
      <ClassProfile name="com.h3xstream.findsecbugs.xpath.XPathInjectionDetector" totalMilliseconds="133" invocations="45" avgMicrosecondsPerInvocation="2955" maxMicrosecondsPerInvocation="13949" standardDeviationMicrosecondsPerInvocation="3974"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="128" invocations="250" avgMicrosecondsPerInvocation="512" maxMicrosecondsPerInvocation="11074" standardDeviationMicrosecondsPerInvocation="1495"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical" totalMilliseconds="124" invocations="219" avgMicrosecondsPerInvocation="568" maxMicrosecondsPerInvocation="36025" standardDeviationMicrosecondsPerInvocation="2715"/>
      <ClassProfile name="com.h3xstream.findsecbugs.file.PathTraversalDetector" totalMilliseconds="120" invocations="45" avgMicrosecondsPerInvocation="2683" maxMicrosecondsPerInvocation="16907" standardDeviationMicrosecondsPerInvocation="3858"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.LoadOfKnownNullValue" totalMilliseconds="117" invocations="45" avgMicrosecondsPerInvocation="2614" maxMicrosecondsPerInvocation="24217" standardDeviationMicrosecondsPerInvocation="4412"/>
      <ClassProfile name="com.h3xstream.findsecbugs.ExternalConfigurationControlDetector" totalMilliseconds="114" invocations="45" avgMicrosecondsPerInvocation="2535" maxMicrosecondsPerInvocation="17039" standardDeviationMicrosecondsPerInvocation="3802"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DefaultEncodingDetector" totalMilliseconds="113" invocations="45" avgMicrosecondsPerInvocation="2524" maxMicrosecondsPerInvocation="29336" standardDeviationMicrosecondsPerInvocation="5744"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.ldap.LdapInjectionDetector" totalMilliseconds="111" invocations="45" avgMicrosecondsPerInvocation="2468" maxMicrosecondsPerInvocation="15592" standardDeviationMicrosecondsPerInvocation="3516"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindPuzzlers" totalMilliseconds="110" invocations="45" avgMicrosecondsPerInvocation="2465" maxMicrosecondsPerInvocation="39692" standardDeviationMicrosecondsPerInvocation="6938"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="110" invocations="45" avgMicrosecondsPerInvocation="2456" maxMicrosecondsPerInvocation="40467" standardDeviationMicrosecondsPerInvocation="7068"/>
      <ClassProfile name="com.h3xstream.findsecbugs.password.ConstantPasswordDetector" totalMilliseconds="110" invocations="45" avgMicrosecondsPerInvocation="2446" maxMicrosecondsPerInvocation="58574" standardDeviationMicrosecondsPerInvocation="8643"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.custom.CustomInjectionDetector" totalMilliseconds="107" invocations="45" avgMicrosecondsPerInvocation="2384" maxMicrosecondsPerInvocation="14344" standardDeviationMicrosecondsPerInvocation="3527"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindInconsistentSync2" totalMilliseconds="104" invocations="45" avgMicrosecondsPerInvocation="2315" maxMicrosecondsPerInvocation="29883" standardDeviationMicrosecondsPerInvocation="5953"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.script.OgnlInjectionDetector" totalMilliseconds="101" invocations="45" avgMicrosecondsPerInvocation="2263" maxMicrosecondsPerInvocation="14284" standardDeviationMicrosecondsPerInvocation="3257"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase" totalMilliseconds="100" invocations="219" avgMicrosecondsPerInvocation="458" maxMicrosecondsPerInvocation="12073" standardDeviationMicrosecondsPerInvocation="1150"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.sql.SqlInjectionDetector" totalMilliseconds="99" invocations="45" avgMicrosecondsPerInvocation="2217" maxMicrosecondsPerInvocation="11492" standardDeviationMicrosecondsPerInvocation="3143"/>
      <ClassProfile name="com.h3xstream.findsecbugs.scala.ScalaSensitiveDataExposureDetector" totalMilliseconds="97" invocations="45" avgMicrosecondsPerInvocation="2165" maxMicrosecondsPerInvocation="9717" standardDeviationMicrosecondsPerInvocation="2831"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationAttributeDetector" totalMilliseconds="97" invocations="45" avgMicrosecondsPerInvocation="2156" maxMicrosecondsPerInvocation="14364" standardDeviationMicrosecondsPerInvocation="3037"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.command.CommandInjectionDetector" totalMilliseconds="96" invocations="45" avgMicrosecondsPerInvocation="2136" maxMicrosecondsPerInvocation="11613" standardDeviationMicrosecondsPerInvocation="3015"/>
      <ClassProfile name="com.h3xstream.findsecbugs.scala.XssMvcApiDetector" totalMilliseconds="95" invocations="45" avgMicrosecondsPerInvocation="2131" maxMicrosecondsPerInvocation="13633" standardDeviationMicrosecondsPerInvocation="2977"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.redirect.UnvalidatedRedirectDetector" totalMilliseconds="95" invocations="45" avgMicrosecondsPerInvocation="2131" maxMicrosecondsPerInvocation="15405" standardDeviationMicrosecondsPerInvocation="3147"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.aws.AwsQueryInjectionDetector" totalMilliseconds="93" invocations="45" avgMicrosecondsPerInvocation="2078" maxMicrosecondsPerInvocation="13400" standardDeviationMicrosecondsPerInvocation="3231"/>
      <ClassProfile name="com.h3xstream.findsecbugs.HttpResponseSplittingDetector" totalMilliseconds="93" invocations="45" avgMicrosecondsPerInvocation="2074" maxMicrosecondsPerInvocation="13755" standardDeviationMicrosecondsPerInvocation="3254"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.sql.AndroidSqlInjectionDetector" totalMilliseconds="93" invocations="45" avgMicrosecondsPerInvocation="2068" maxMicrosecondsPerInvocation="12941" standardDeviationMicrosecondsPerInvocation="3025"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.trust.TrustBoundaryViolationValueDetector" totalMilliseconds="92" invocations="45" avgMicrosecondsPerInvocation="2057" maxMicrosecondsPerInvocation="11772" standardDeviationMicrosecondsPerInvocation="2900"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.script.ScriptInjectionDetector" totalMilliseconds="91" invocations="45" avgMicrosecondsPerInvocation="2030" maxMicrosecondsPerInvocation="14416" standardDeviationMicrosecondsPerInvocation="3051"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.beans.BeanInjectionDetector" totalMilliseconds="89" invocations="45" avgMicrosecondsPerInvocation="1995" maxMicrosecondsPerInvocation="18398" standardDeviationMicrosecondsPerInvocation="3353"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetector" totalMilliseconds="86" invocations="45" avgMicrosecondsPerInvocation="1919" maxMicrosecondsPerInvocation="14328" standardDeviationMicrosecondsPerInvocation="2870"/>
      <ClassProfile name="com.h3xstream.findsecbugs.scala.XssTwirlDetector" totalMilliseconds="85" invocations="45" avgMicrosecondsPerInvocation="1893" maxMicrosecondsPerInvocation="11791" standardDeviationMicrosecondsPerInvocation="2725"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.formatter.FormatStringManipulationDetector" totalMilliseconds="83" invocations="45" avgMicrosecondsPerInvocation="1852" maxMicrosecondsPerInvocation="12035" standardDeviationMicrosecondsPerInvocation="2758"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetector" totalMilliseconds="83" invocations="45" avgMicrosecondsPerInvocation="1851" maxMicrosecondsPerInvocation="9670" standardDeviationMicrosecondsPerInvocation="2579"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory" totalMilliseconds="78" invocations="250" avgMicrosecondsPerInvocation="312" maxMicrosecondsPerInvocation="12294" standardDeviationMicrosecondsPerInvocation="1164"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.UnreadFields" totalMilliseconds="78" invocations="45" avgMicrosecondsPerInvocation="1735" maxMicrosecondsPerInvocation="8289" standardDeviationMicrosecondsPerInvocation="2289"/>
      <ClassProfile name="com.h3xstream.findsecbugs.injection.fileDisclosure.FileDisclosureDetector" totalMilliseconds="75" invocations="45" avgMicrosecondsPerInvocation="1679" maxMicrosecondsPerInvocation="8988" standardDeviationMicrosecondsPerInvocation="2260"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.collect.CollectMethodsReturningImmutableCollections" totalMilliseconds="74" invocations="219" avgMicrosecondsPerInvocation="341" maxMicrosecondsPerInvocation="20918" standardDeviationMicrosecondsPerInvocation="1512"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.DumbMethods" totalMilliseconds="73" invocations="45" avgMicrosecondsPerInvocation="1640" maxMicrosecondsPerInvocation="12717" standardDeviationMicrosecondsPerInvocation="2389"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison" totalMilliseconds="72" invocations="45" avgMicrosecondsPerInvocation="1607" maxMicrosecondsPerInvocation="17954" standardDeviationMicrosecondsPerInvocation="3526"/>
      <ClassProfile name="com.h3xstream.findsecbugs.password.HardcodePasswordInMapDetector" totalMilliseconds="68" invocations="45" avgMicrosecondsPerInvocation="1522" maxMicrosecondsPerInvocation="10358" standardDeviationMicrosecondsPerInvocation="2075"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindDeadLocalStores" totalMilliseconds="66" invocations="45" avgMicrosecondsPerInvocation="1488" maxMicrosecondsPerInvocation="12955" standardDeviationMicrosecondsPerInvocation="2591"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ExplicitSerialization" totalMilliseconds="65" invocations="219" avgMicrosecondsPerInvocation="299" maxMicrosecondsPerInvocation="8958" standardDeviationMicrosecondsPerInvocation="1397"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.Section508Compliance" totalMilliseconds="64" invocations="45" avgMicrosecondsPerInvocation="1441" maxMicrosecondsPerInvocation="11598" standardDeviationMicrosecondsPerInvocation="2810"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.ReflectiveClasses" totalMilliseconds="64" invocations="219" avgMicrosecondsPerInvocation="295" maxMicrosecondsPerInvocation="10872" standardDeviationMicrosecondsPerInvocation="812"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions" totalMilliseconds="64" invocations="250" avgMicrosecondsPerInvocation="258" maxMicrosecondsPerInvocation="6976" standardDeviationMicrosecondsPerInvocation="666"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.InefficientStringBuffering" totalMilliseconds="62" invocations="45" avgMicrosecondsPerInvocation="1398" maxMicrosecondsPerInvocation="10837" standardDeviationMicrosecondsPerInvocation="2549"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation" totalMilliseconds="62" invocations="45" avgMicrosecondsPerInvocation="1397" maxMicrosecondsPerInvocation="20527" standardDeviationMicrosecondsPerInvocation="3642"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis" totalMilliseconds="61" invocations="219" avgMicrosecondsPerInvocation="281" maxMicrosecondsPerInvocation="8154" standardDeviationMicrosecondsPerInvocation="748"/>
      <ClassProfile name="com.h3xstream.findsecbugs.password.IntuitiveHardcodePasswordDetector" totalMilliseconds="58" invocations="45" avgMicrosecondsPerInvocation="1304" maxMicrosecondsPerInvocation="6966" standardDeviationMicrosecondsPerInvocation="1754"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.DeletingWhileIterating" totalMilliseconds="58" invocations="45" avgMicrosecondsPerInvocation="1291" maxMicrosecondsPerInvocation="5674" standardDeviationMicrosecondsPerInvocation="1528"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.MethodReturnCheck" totalMilliseconds="57" invocations="45" avgMicrosecondsPerInvocation="1287" maxMicrosecondsPerInvocation="12880" standardDeviationMicrosecondsPerInvocation="2590"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.LocalSynchronizedCollection" totalMilliseconds="57" invocations="45" avgMicrosecondsPerInvocation="1284" maxMicrosecondsPerInvocation="9924" standardDeviationMicrosecondsPerInvocation="2133"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNullDeref" totalMilliseconds="57" invocations="45" avgMicrosecondsPerInvocation="1284" maxMicrosecondsPerInvocation="16856" standardDeviationMicrosecondsPerInvocation="3260"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase" totalMilliseconds="57" invocations="5277" avgMicrosecondsPerInvocation="10" maxMicrosecondsPerInvocation="8055" standardDeviationMicrosecondsPerInvocation="145"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.RuntimeExceptionCapture" totalMilliseconds="55" invocations="45" avgMicrosecondsPerInvocation="1243" maxMicrosecondsPerInvocation="11075" standardDeviationMicrosecondsPerInvocation="2509"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.SillynessPotPourri" totalMilliseconds="55" invocations="45" avgMicrosecondsPerInvocation="1236" maxMicrosecondsPerInvocation="10336" standardDeviationMicrosecondsPerInvocation="2173"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindUselessObjects" totalMilliseconds="55" invocations="45" avgMicrosecondsPerInvocation="1230" maxMicrosecondsPerInvocation="11264" standardDeviationMicrosecondsPerInvocation="2265"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.PossiblyRedundantMethodCalls" totalMilliseconds="55" invocations="45" avgMicrosecondsPerInvocation="1224" maxMicrosecondsPerInvocation="11402" standardDeviationMicrosecondsPerInvocation="1973"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CrossSiteScripting" totalMilliseconds="51" invocations="45" avgMicrosecondsPerInvocation="1152" maxMicrosecondsPerInvocation="19625" standardDeviationMicrosecondsPerInvocation="3116"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.InvalidConstantArgument" totalMilliseconds="50" invocations="45" avgMicrosecondsPerInvocation="1131" maxMicrosecondsPerInvocation="8459" standardDeviationMicrosecondsPerInvocation="1596"/>
      <ClassProfile name="com.mebigfatguy.fbcontrib.detect.OrphanedDOMNode" totalMilliseconds="50" invocations="45" avgMicrosecondsPerInvocation="1119" maxMicrosecondsPerInvocation="14824" standardDeviationMicrosecondsPerInvocation="2475"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindSelfComparison" totalMilliseconds="48" invocations="45" avgMicrosecondsPerInvocation="1076" maxMicrosecondsPerInvocation="12079" standardDeviationMicrosecondsPerInvocation="2165"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation" totalMilliseconds="47" invocations="45" avgMicrosecondsPerInvocation="1050" maxMicrosecondsPerInvocation="27672" standardDeviationMicrosecondsPerInvocation="4040"/>
      <ClassProfile name="com.h3xstream.findsecbugs.WeakFilenameUtilsMethodDetector" totalMilliseconds="47" invocations="45" avgMicrosecondsPerInvocation="1050" maxMicrosecondsPerInvocation="9081" standardDeviationMicrosecondsPerInvocation="1862"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
