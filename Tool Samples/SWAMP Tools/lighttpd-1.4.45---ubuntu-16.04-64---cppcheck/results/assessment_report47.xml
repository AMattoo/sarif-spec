<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.75"/>
    <errors>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ndx&apos; can be reduced." verbose="The scope of the variable &apos;ndx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="server.c" file="array.h" line="97"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;min_ts&apos; can be reduced." verbose="The scope of the variable &apos;min_ts&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="server.c" line="1509"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;revents&apos; can be reduced." verbose="The scope of the variable &apos;revents&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="server.c" line="1784"/>
        </error>
        <error id="getgrnamCalled" severity="portability" msg="Non reentrant function &apos;getgrnam&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getgrnam_r&apos;." verbose="Non reentrant function &apos;getgrnam&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getgrnam_r&apos;." cwe="477">
            <location file="server.c" line="1016"/>
        </error>
        <error id="getpwnamCalled" severity="portability" msg="Non reentrant function &apos;getpwnam&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getpwnam_r&apos;." verbose="Non reentrant function &apos;getpwnam&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getpwnam_r&apos;." cwe="477">
            <location file="server.c" line="1024"/>
        </error>
        <error id="getgrgidCalled" severity="portability" msg="Non reentrant function &apos;getgrgid&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getgrgid_r&apos;." verbose="Non reentrant function &apos;getgrgid&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;getgrgid_r&apos;." cwe="477">
            <location file="server.c" line="1036"/>
        </error>
    </errors>
</results>
